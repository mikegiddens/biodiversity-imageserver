/*
 * @copyright SilverBiology, LLC
 * @author Mike Giddens
 * @website http://www.silverbiology.com
 * 
 */


Ext.namespace('Ext');Ext.namespace('Ext.ux');Ext.ux.XTemplate=Ext.extend(Ext.XTemplate,{staticIndex:0,testMirror:function(value){if(typeof(this.mirrorObj)!='undefined'){var mirrorIndex=this.getMirror(value);if(typeof(mirrorIndex)!='undefined'){if(this.staticIndex+1>this.mirrorObj[mirrorIndex].mirrors.length){this.staticIndex=0;return value;}else{var val=value.replace(this.mirrorObj[mirrorIndex].main,this.mirrorObj[mirrorIndex].mirrors[this.staticIndex]);this.staticIndex++;return val;}}else{return value;}}else{return value;}},getMirror:function(value){for(var i=0;i<this.mirrorObj.length;i++){var index=value.search(this.mirrorObj[i].main);if(index!=-1){if(this.mirrorObj[i].mirrors!=null){if(!Ext.isEmpty(this.mirrorObj[i].mirrors)){return i;}}}};},setMirror:function(value){if(value!=null){if(!Ext.isEmpty(value)){this.mirrorObj=value;}}},convDate:function(value){if(value=='0000-00-00 00:00:00')
return String.format('');else{var dt=Date.parseDate(value,"Y-m-d H:i:s",true);var dt1=new Date(dt);var dt2=dt1.format('d-M-Y');return dt2;}}});

Ext.namespace('Ext.ux.panel');Ext.ux.GMapPanel=Ext.extend(Ext.Panel,{border:false,respErrors:[{code:'UNKNOWN_ERROR',msg:'A geocoding or directions request could not be successfully processed, yet the exact reason for the failure is not known.'},{code:'ERROR',msg:'There was a problem contacting the Google servers.'},{code:'ZERO_RESULTS',msg:'The request did not encounter any errors but returns zero results.'},{code:'INVALID_REQUEST',msg:'This request was invalid.'},{code:'REQUEST_DENIED',msg:'The webpage is not allowed to use the geocoder for some reason.'},{code:'OVER_QUERY_LIMIT',msg:'The webpage has gone over the requests limit in too short a period of time.'}],locationTypes:[{level:4,code:'ROOFTOP',msg:'The returned result is a precise geocode for which we have location information accurate down to street address precision.'},{level:3,code:'RANGE_INTERPOLATED',msg:'The returned result reflects an approximation (usually on a road) interpolated between two precise points (such as intersections). Interpolated results are generally returned when rooftop geocodes are unavailable for a street address.'},{level:2,code:'GEOMETRIC_CENTER',msg:'The returned result is the geometric center of a result such as a polyline (for example, a street) or polygon (region).'},{level:1,code:'APPROXIMATE',msg:'The returned result is approximate.'}],respErrorTitle:'Error',geoErrorMsgUnable:'Unable to Locate the Address you provided',geoErrorTitle:'Address Location Error',geoErrorMsgAccuracy:'The address provided has a low accuracy.<br><br>"{0}" Accuracy.<br><br>{1}',gmapType:'map',zoomLevel:3,yaw:180,pitch:0,displayGeoErrors:false,minGeoAccuracy:'ROOFTOP',mapDefined:false,mapDefinedGMap:false,initComponent:function(){this.addEvents('mapready','apiready');Ext.applyIf(this,{markers:[],cache:{marker:[],polyline:[],infowindow:[]}});Ext.ux.GMapPanel.superclass.initComponent.call(this);if(window.google&&window.google.maps){this.on('afterrender',this.apiReady,this);}else{window.gmapapiready=this.apiReady.createDelegate(this);this.buildScriptTag('http://maps.google.com/maps/api/js?sensor=false&callback=gmapapiready');}},apiReady:function(){if(this.rendered){(function(){var myOptions={panControl:true,zoomControl:true,scaleControl:false,mapTypeControl:false,streetViewControl:false,zoom:this.zoomLevel,mapTypeId:google.maps.MapTypeId.ROADMAP,backgroundColor:'#FFF'}
if(this.gmapType==='map'){this.gmap=new google.maps.Map(this.body.dom,myOptions);this.mapDefined=true;this.mapDefinedGMap=true;}
if(this.gmapType==='panorama'){this.gmap=new GStreetviewPanorama(this.body.dom);this.mapDefined=true;}
if(!this.mapDefined&&this.gmapType){this.gmap=new google.maps.Map(this.body.dom,{zoom:this.zoomLevel,mapTypeId:google.maps.MapTypeId.ROADMAP});this.gmap.setMapTypeId(this.gmapType);this.mapDefined=true;this.mapDefinedGMap=true;}
google.maps.event.addListenerOnce(this.getMap(),'tilesloaded',this.onMapReady.createDelegate(this));google.maps.event.addListener(this.getMap(),'dragend',this.dragEnd.createDelegate(this));if(typeof this.setCenter==='object'){if(typeof this.setCenter.geoCodeAddr==='string'){this.geoCodeLookup(this.setCenter.geoCodeAddr,this.setCenter.marker,false,true,this.setCenter.listeners);}else{if(this.gmapType==='map'){var point=new google.maps.LatLng(this.setCenter.lat,this.setCenter.lng);this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;}
if(typeof this.setCenter.marker==='object'&&typeof point==='object'){this.addMarker(point,this.setCenter.marker,this.setCenter.marker.clear);}}
if(this.gmapType==='panorama'){this.getMap().setLocationAndPOV(new google.maps.LatLng(this.setCenter.lat,this.setCenter.lng),{yaw:this.yaw,pitch:this.pitch,zoom:this.zoomLevel});}}}).defer(200,this);}else{this.on('afterrender',this.apiReady,this);}},afterRender:function(){Ext.ux.GMapPanel.superclass.afterRender.call(this);},buildScriptTag:function(filename,callback){var script=document.createElement('script'),head=document.getElementsByTagName("head")[0];script.type="text/javascript";script.src=filename;return head.appendChild(script);},onMapReady:function(){this.addMapControls();this.addOptions();this.addMarkers(this.markers);this.fireEvent('mapready',this,this.getMap());},onResize:function(w,h){Ext.ux.GMapPanel.superclass.onResize.call(this,w,h);if(typeof this.getMap()=='object'){google.maps.event.trigger(this.getMap(),'resize');if(this.lastCenter){this.getMap().setCenter(this.lastCenter,this.zoomLevel);}}},setSize:function(width,height,animate){Ext.ux.GMapPanel.superclass.setSize.call(this,width,height,animate);if(Ext.isObject(this.getMap())){google.maps.event.trigger(this.getMap(),'resize');if(this.lastCenter){this.getMap().setCenter(this.lastCenter,this.zoomLevel);}}},dragEnd:function(){this.lastCenter=this.getMap().getCenter();},getMap:function(){return this.gmap;},getCenter:function(){return this.getMap().getCenter();},getCenterLatLng:function(){var ll=this.getCenter();return{lat:ll.lat(),lng:ll.lng()};},addMarkers:function(markers){if(Ext.isArray(markers)){for(var i=0;i<markers.length;i++){if(markers[i]){if(typeof markers[i].geoCodeAddr=='string'){this.geoCodeLookup(markers[i].geoCodeAddr,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}else{var mkr_point=new google.maps.LatLng(markers[i].lat,markers[i].lng);this.addMarker(mkr_point,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}}}}},addMarker:function(point,marker,clear,center,listeners){Ext.applyIf(marker,{});if(clear===true){this.clearMarkers();}
if(center===true){this.getMap().setCenter(point,this.zoomLevel)
this.lastCenter=point;}
var mark=new google.maps.Marker(Ext.apply(marker,{position:point}));if(marker.infoWindow){this.createInfoWindow(marker.infoWindow,point,mark);}
this.cache.marker.push(mark);mark.setMap(this.getMap());if(typeof listeners==='object'){for(evt in listeners){google.maps.event.addListener(mark,evt,listeners[evt]);}}
return mark;},addPolyline:function(points,linestyle){var plinepnts=new google.maps.MVCArray,pline,linestyle=linestyle?linestyle:{strokeColor:'#FF0000',strokeOpacity:1.0,strokeWeight:2};Ext.each(points,function(point){plinepnts.push(new google.maps.LatLng(point.lat,point.lng));},this);var pline=new google.maps.Polyline(Ext.apply({path:plinepnts},linestyle));this.cache.polyline.push(pline);pline.setMap(this.getMap());},createInfoWindow:function(inwin,point,marker){var me=this,infoWindow=new google.maps.InfoWindow({content:inwin.content,position:point});if(marker){google.maps.event.addListener(marker,'click',function(){me.hideAllInfoWindows();infoWindow.open(me.getMap());});}
this.cache.infowindow.push(infoWindow);return infoWindow;},hideAllInfoWindows:function(){for(var i=0;i<this.cache.infowindow.length;i++){this.cache.infowindow[i].close();}},clearMarkers:function(){this.hideAllInfoWindows();this.hideMarkers();},hideMarkers:function(){Ext.each(this.cache.marker,function(mrk){mrk.setMap(null);});},showMarkers:function(){Ext.each(this.cache.marker,function(mrk){mrk.setMap(this.getMap());},this);},addMapControls:function(){if(this.gmapType==='map'){if(Ext.isArray(this.mapControls)){for(i=0;i<this.mapControls.length;i++){}}else if(typeof this.mapControls==='string'){}else if(typeof this.mapControls==='object'){}}},addMapControl:function(mc){var mcf=window[mc];if(typeof mcf==='function'){}},addOptions:function(){if(Ext.isArray(this.mapConfOpts)){var mc;for(i=0;i<this.mapConfOpts.length;i++){}}else if(typeof this.mapConfOpts==='string'){}},addOption:function(mo){var mof=this.getMap()[mo];if(typeof mof==='function'){this.getMap()[mo]();}},geoCodeLookup:function(addr,marker,clear,center,listeners){if(!this.geocoder){this.geocoder=new google.maps.Geocoder();}
this.geocoder.geocode({address:addr},this.addAddressToMap.createDelegate(this,[addr,marker,clear,center,listeners],true));},centerOnClientLocation:function(){this.getClientLocation(function(loc){var point=new google.maps.LatLng(loc.latitude,loc.longitude);this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;});},getClientLocation:function(fn,errorFn){if(!errorFn){errorFn=Ext.emptyFn;}
if(!this.clientGeo){this.clientGeo=google.gears.factory.create('beta.geolocation');}
geo.getCurrentPosition(fn.createDelegate(this),errorFn);},addAddressToMap:function(response,status,addr,marker,clear,center,listeners){if(!response||status!=='OK'){this.respErrorMsg(status);}else{var place=response[0].geometry.location,accuracy=this.getLocationTypeInfo(response[0].geometry.location_type,'level'),reqAccuracy=this.getLocationTypeInfo(this.minGeoAccuracy,'level');if(accuracy===0){this.geoErrorMsg(this.geoErrorTitle,this.geoErrorMsgUnable);}else{if(accuracy<reqAccuracy){this.geoErrorMsg(this.geoErrorTitle,String.format(this.geoErrorMsgAccuracy,response[0].geometry.location_type,this.getLocationTypeInfo(response[0].geometry.location_type,'msg')));}else{point=new google.maps.LatLng(place.xa,place.za);if(center){this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;}
if(typeof marker==='object'){if(!marker.title){marker.title=response.formatted_address;}
var mkr=this.addMarker(point,marker,clear,false,listeners);if(marker.callback){marker.callback.call(this,mkr,point);}}}}}},geoErrorMsg:function(title,msg){if(this.displayGeoErrors){Ext.MessageBox.alert(title,msg);}},respErrorMsg:function(code){Ext.each(this.respErrors,function(obj){if(code==obj.code){Ext.MessageBox.alert(this.respErrorTitle,obj.msg);}},this);},getLocationTypeInfo:function(location_type,property){var val=0;Ext.each(this.locationTypes,function(itm){if(itm.code===location_type){val=itm[property];}});return val;}});Ext.reg('gmappanel',Ext.ux.GMapPanel);

Ext.ux.GDataTableAdapter=function(config){var convert={'auto':'string','string':'string','int':'number','float':'number','boolean':'boolean','date':'date'};return{adapt:function(config){var store=Ext.StoreMgr.lookup(config.store||config.ds);var tbl=new google.visualization.DataTable();var cols=config.columns;for(var i=0;i<cols.length;i++){var c=cols[i];var id=c.dataIndex||c;var f=store.fields.get(id);tbl.addColumn(convert[f.type.type],c.label||c,id);}
var rs=store.getRange();tbl.addRows(rs.length);for(var i=0;i<rs.length;i++){for(var j=0;j<cols.length;j++){var fld=store.fields.itemAt(j);tbl.setValue(i,j,rs[i].get(fld.name));}}
return tbl;}};}();Ext.ux.GVisualizationPanel=Ext.extend(Ext.Panel,{visualizationAPI:'visualization',visualizationAPIVer:'1',visualizationPkgs:{'intensitymap':'IntensityMap','orgchart':'OrgChart','linechart':'LineChart','gauge':'Gauge','scatterchart':'ScatterChart'},visualizationPkg:'',html:'Loading...',store:null,first:true,initComponent:function(){if(typeof this.visualizationPkg==='object'){Ext.apply(this.visualizationPkgs,this.visualizationPkg);for(var key in this.visualizationPkg){this.visualizationPkg=key;break;}}
google.load(this.visualizationAPI,this.visualizationAPIVer,{packages:[this.visualizationPkg],callback:this.onLoadCallback.createDelegate(this)});this.store=Ext.StoreMgr.lookup(this.store);Ext.ux.GVisualizationPanel.superclass.initComponent.call(this);},onLoadCallback:function(){var tableCfg={store:this.store,columns:this.columns};this.datatable=Ext.ux.GDataTableAdapter.adapt(tableCfg);var cls=this.visualizationPkgs[this.visualizationPkg];if(typeof(this.body)!='undefined'){this.body.update('');this.visualization=new google.visualization[cls](this.body.dom);var relaySelect=function(){this.fireEvent('select',this,this.visualization);};google.visualization.events.addListener(this.visualization,'select',relaySelect.createDelegate(this));this.visualization.draw(this.datatable,Ext.apply({},this.visualizationCfg));}}});Ext.reg('gvisualization',Ext.ux.GVisualizationPanel);

Ext.ns('Ext.ux.grid');Ext.ux.grid.ExplorerView=Ext.extend(Ext.grid.GridView,{rowTemplate:null,changeTemplate:function(template){this.rowTemplate=template;this.initTemplates();this.refresh();},initTemplates:function(){Ext.ux.grid.ExplorerView.superclass.initTemplates.call(this);if(!this.templates.orgrow)
this.templates.orgrow=this.templates.row;if(this.rowTemplate!=null)
this.templates.row=this.rowTemplate.compile();else
this.templates.row=this.templates.orgrow;},doRender:function(cs,rs,ds,startRow,colCount,stripe){if(this.rowTemplate==null){return Ext.ux.grid.ExplorerView.superclass.doRender.apply(this,arguments);}else{var ts=this.templates,rt=ts.row;var buf=[];for(var j=0,len=rs.length;j<len;j++){var rowIndex=(j+startRow);rs[j].data.rowIndex=rowIndex;buf[buf.length]=rt.apply(rs[j].data);}
buf[buf.length]="<div style='clear: both;'></div>";return buf.join("");}},updateAllColumnWidths:function(){var tw=this.getTotalWidth();var clen=this.cm.getColumnCount();var ws=[];for(var i=0;i<clen;i++){ws[i]=this.getColumnWidth(i);}
this.innerHd.firstChild.firstChild.style.width=tw;for(var i=0;i<clen;i++){var hd=this.getHeaderCell(i);hd.style.width=ws[i];}
if(this.rowTemplate==null){var ns=this.getRows();for(var i=0,len=ns.length;i<len;i++){ns[i].style.width=tw;ns[i].firstChild.style.width=tw;var row=ns[i].firstChild.rows[0];for(var j=0;j<clen;j++){row.childNodes[j].style.width=ws[j];}}}
this.onAllColumnWidthsUpdated(ws,tw);},updateColumnWidth:function(col,width){var w=this.getColumnWidth(col);var tw=this.getTotalWidth();this.innerHd.firstChild.firstChild.style.width=tw;var hd=this.getHeaderCell(col);hd.style.width=w;if(this.rowTemplate==null){var ns=this.getRows();for(var i=0,len=ns.length;i<len;i++){ns[i].style.width=tw;ns[i].firstChild.style.width=tw;ns[i].firstChild.rows[0].childNodes[col].style.width=w;}}
this.onColumnWidthUpdated(col,w,tw);}});Ext.reg('explorerview',Ext.ux.grid.ExplorerView);Ext.override(Ext.grid.GridPanel,{getView:function(){if(!this.view){this.view=new Ext.ux.grid.ExplorerView(this.viewConfig);}
return this.view;}});

Ext.ux.TwinComboBox=Ext.extend(Ext.form.ComboBox,{initComponent:Ext.form.TwinTriggerField.prototype.initComponent,afterRender:Ext.form.TwinTriggerField.prototype.afterRender,getTrigger:Ext.form.TwinTriggerField.prototype.getTrigger,getTriggerWidth:Ext.form.TwinTriggerField.prototype.getTriggerWidth,initTrigger:Ext.form.TwinTriggerField.prototype.initTrigger,trigger1Class:'x-form-clear-trigger',hideTrigger1:true,hideTrigger2:true,typeAhead:false,minChars:2,value:'',displayField:'name',queryParam:'filter',reset:Ext.form.ComboBox.prototype.reset.createSequence(function(){this.triggers[0].hide();}),onViewClick:Ext.form.ComboBox.prototype.onViewClick.createSequence(function(){this.triggers[0].show();}),onTrigger2Click:function(){this.onTriggerClick();},onTrigger1Click:function(){this.clearValue();this.triggers[0].hide();this.fireEvent('clear',this);}});Ext.reg('xtwincombo',Ext.ux.TwinComboBox);

Ext.ns('Ext.ux.menu');Ext.ux.menu.RangeMenu=Ext.extend(Ext.menu.Menu,{constructor:function(config){Ext.ux.menu.RangeMenu.superclass.constructor.call(this,config);this.addEvents('update');this.updateTask=new Ext.util.DelayedTask(this.fireUpdate,this);var i,len,item,cfg,Cls;for(i=0,len=this.menuItems.length;i<len;i++){item=this.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,enableKeyEvents:true,iconCls:this.iconCls[item]||'no-icon',listeners:{scope:this,keyup:this.onInputKeyUp}};Ext.apply(cfg,Ext.applyIf(this.fields[item]||{},this.fieldCfg[item]),this.menuItemCfgs);Cls=cfg.fieldCls||this.fieldCls;item=this.fields[item]=new Cls(cfg);}
this.add(item);}},fireUpdate:function(){this.fireEvent('update',this);},getValue:function(){var result={},key,field;for(key in this.fields){field=this.fields[key];if(field.isValid()&&String(field.getValue()).length>0){result[key]=field.getValue();}}
return result;},setValue:function(data){var key;for(key in this.fields){this.fields[key].setValue(data[key]!==undefined?data[key]:'');}
this.fireEvent('update',this);},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.hide(true);return;}
if(field==this.fields.eq){if(this.fields.gt){this.fields.gt.setValue(null);}
if(this.fields.lt){this.fields.lt.setValue(null);}}
else{this.fields.eq.setValue(null);}
this.updateTask.delay(this.updateBuffer);}});

Ext.namespace('Ext.ux.menu');Ext.ux.menu.ListMenu=Ext.extend(Ext.menu.Menu,{labelField:'text',loadingText:'Loading...',loadOnShow:true,single:false,constructor:function(cfg){this.selected=[];this.addEvents('checkchange');Ext.ux.menu.ListMenu.superclass.constructor.call(this,cfg=cfg||{});if(!cfg.store&&cfg.options){var options=[];for(var i=0,len=cfg.options.length;i<len;i++){var value=cfg.options[i];switch(Ext.type(value)){case'array':options.push(value);break;case'object':options.push([value.id,value[this.labelField]]);break;case'string':options.push([value,value]);break;}}
this.store=new Ext.data.Store({reader:new Ext.data.ArrayReader({id:0},['id',this.labelField]),data:options,listeners:{'load':this.onLoad,scope:this}});this.loaded=true;}else{this.add({text:this.loadingText,iconCls:'loading-indicator'});this.store.on('load',this.onLoad,this);}},destroy:function(){if(this.store){this.store.destroy();}
Ext.ux.menu.ListMenu.superclass.destroy.call(this);},show:function(){var lastArgs=null;return function(){if(arguments.length===0){Ext.ux.menu.ListMenu.superclass.show.apply(this,lastArgs);}else{lastArgs=arguments;if(this.loadOnShow&&!this.loaded){this.store.load();}
Ext.ux.menu.ListMenu.superclass.show.apply(this,arguments);}};}(),onLoad:function(store,records){var visible=this.isVisible();this.hide(false);this.removeAll(true);var gid=this.single?Ext.id():null;for(var i=0,len=records.length;i<len;i++){var item=new Ext.menu.CheckItem({text:records[i].get(this.labelField),group:gid,checked:this.selected.indexOf(records[i].id)>-1,hideOnClick:false});item.itemId=records[i].id;item.on('checkchange',this.checkChange,this);this.add(item);}
this.loaded=true;if(visible){this.show();}
this.fireEvent('load',this,records);},getSelected:function(){return this.selected;},setSelected:function(value){value=this.selected=[].concat(value);if(this.loaded){this.items.each(function(item){item.setChecked(false,true);for(var i=0,len=value.length;i<len;i++){if(item.itemId==value[i]){item.setChecked(true,true);}}},this);}},checkChange:function(item,checked){var value=[];this.items.each(function(item){if(item.checked){value.push(item.itemId);}},this);this.selected=value;this.fireEvent('checkchange',item,checked);}});

Ext.namespace('Ext.ux.grid');Ext.ux.grid.GridFilters=Ext.extend(Ext.util.Observable,{autoReload:true,filterCls:'ux-filtered-column',local:false,menuFilterText:'Filters',paramPrefix:'filter',showMenu:true,stateId:undefined,updateBuffer:500,constructor:function(config){config=config||{};this.deferredUpdate=new Ext.util.DelayedTask(this.reload,this);this.filters=new Ext.util.MixedCollection();this.filters.getKey=function(o){return o?o.dataIndex:null;};this.addFilters(config.filters);delete config.filters;Ext.apply(this,config);},init:function(grid){if(grid instanceof Ext.grid.GridPanel){this.grid=grid;this.bindStore(this.grid.getStore(),true);if(this.filters.getCount()==0){this.addFilters(this.grid.getColumnModel());}
this.grid.filters=this;this.grid.addEvents({'filterupdate':true});grid.on({scope:this,beforestaterestore:this.applyState,beforestatesave:this.saveState,beforedestroy:this.destroy,reconfigure:this.onReconfigure});if(grid.rendered){this.onRender();}else{grid.on({scope:this,single:true,render:this.onRender});}}else if(grid instanceof Ext.PagingToolbar){this.toolbar=grid;}},applyState:function(grid,state){var key,filter;this.applyingState=true;this.clearFilters();if(state.filters){for(key in state.filters){filter=this.filters.get(key);if(filter){filter.setValue(state.filters[key]);filter.setActive(true);}}}
this.deferredUpdate.cancel();if(this.local){this.reload();}
delete this.applyingState;delete state.filters;},saveState:function(grid,state){var filters={};this.filters.each(function(filter){if(filter.active){filters[filter.dataIndex]=filter.getValue();}});return(state.filters=filters);},onRender:function(){this.grid.getView().on('refresh',this.onRefresh,this);this.createMenu();},destroy:function(){this.removeAll();this.purgeListeners();if(this.filterMenu){Ext.menu.MenuMgr.unregister(this.filterMenu);this.filterMenu.destroy();this.filterMenu=this.menu.menu=null;}},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear();}},bindStore:function(store,initial){if(!initial&&this.store){if(this.local){store.un('load',this.onLoad,this);}else{store.un('beforeload',this.onBeforeLoad,this);}}
if(store){if(this.local){store.on('load',this.onLoad,this);}else{store.on('beforeload',this.onBeforeLoad,this);}}
this.store=store;},onReconfigure:function(){this.bindStore(this.grid.getStore());this.store.clearFilter();this.removeAll();this.addFilters(this.grid.getColumnModel());this.updateColumnHeadings();},createMenu:function(){var view=this.grid.getView(),hmenu=view.hmenu;if(this.showMenu&&hmenu){this.sep=hmenu.addSeparator();this.filterMenu=new Ext.menu.Menu({id:this.grid.id+'-filters-menu'});this.menu=hmenu.add({checked:false,itemId:'filters',text:this.menuFilterText,menu:this.filterMenu});this.menu.on({scope:this,checkchange:this.onCheckChange,beforecheckchange:this.onBeforeCheck});hmenu.on('beforeshow',this.onMenu,this);}
this.updateColumnHeadings();},getMenuFilter:function(){var view=this.grid.getView();if(!view||view.hdCtxIndex===undefined){return null;}
return this.filters.get(view.cm.config[view.hdCtxIndex].dataIndex);},onMenu:function(filterMenu){var filter=this.getMenuFilter();if(filter){this.menu.menu=filter.menu;this.menu.setChecked(filter.active,false);this.menu.setDisabled(filter.disabled===true);}
this.menu.setVisible(filter!==undefined);this.sep.setVisible(filter!==undefined);},onCheckChange:function(item,value){this.getMenuFilter().setActive(value);},onBeforeCheck:function(check,value){return!value||this.getMenuFilter().isActivatable();},onStateChange:function(event,filter){if(event==='serialize'){return;}
if(filter==this.getMenuFilter()){this.menu.setChecked(filter.active,false);}
if((this.autoReload||this.local)&&!this.applyingState){this.deferredUpdate.delay(this.updateBuffer);}
this.updateColumnHeadings();if(!this.applyingState){this.grid.saveState();}
this.grid.fireEvent('filterupdate',this,filter);},onBeforeLoad:function(store,options){options.params=options.params||{};this.cleanParams(options.params);var params=this.buildQuery(this.getFilterData());Ext.apply(options.params,params);},onLoad:function(store,options){store.filterBy(this.getRecordFilter());},onRefresh:function(){this.updateColumnHeadings();},updateColumnHeadings:function(){var view=this.grid.getView(),i,len,filter;if(view.mainHd){for(i=0,len=view.cm.config.length;i<len;i++){filter=this.getFilter(view.cm.config[i].dataIndex);Ext.fly(view.getHeaderCell(i))[filter&&filter.active?'addClass':'removeClass'](this.filterCls);}}},reload:function(){if(this.local){this.grid.store.clearFilter(true);this.grid.store.filterBy(this.getRecordFilter());}else{var start,store=this.grid.store;this.deferredUpdate.cancel();if(this.toolbar){start=store.paramNames.start;if(store.lastOptions&&store.lastOptions.params&&store.lastOptions.params[start]){store.lastOptions.params[start]=0;}}
store.reload();}},getRecordFilter:function(){var f=[],len,i;this.filters.each(function(filter){if(filter.active){f.push(filter);}});len=f.length;return function(record){for(i=0;i<len;i++){if(!f[i].validateRecord(record)){return false;}}
return true;};},addFilter:function(config){var Cls=this.getFilterClass(config.type),filter=config.menu?config:(new Cls(config));this.filters.add(filter);Ext.util.Observable.capture(filter,this.onStateChange,this);return filter;},addFilters:function(filters){if(filters){var i,len,filter,cm=false,dI;if(filters instanceof Ext.grid.ColumnModel){filters=filters.config;cm=true;}
for(i=0,len=filters.length;i<len;i++){filter=false;if(cm){dI=filters[i].dataIndex;filter=filters[i].filter||filters[i].filterable;if(filter){filter=(filter===true)?{}:filter;Ext.apply(filter,{dataIndex:dI});filter.type=filter.type||this.store.fields.get(dI).type.type;}}else{filter=filters[i];}
if(filter){this.addFilter(filter);}}}},getFilter:function(dataIndex){return this.filters.get(dataIndex);},clearFilters:function(){this.filters.each(function(filter){filter.setActive(false);});},getFilterData:function(){var filters=[],i,len;this.filters.each(function(f){if(f.active){var d=[].concat(f.serialize());for(i=0,len=d.length;i<len;i++){filters.push({field:f.dataIndex,data:d[i]});}}});return filters;},buildQuery:function(filters){var p={},i,f,root,dataPrefix,key,tmp,len=filters.length;if(!this.encode){for(i=0;i<len;i++){f=filters[i];root=[this.paramPrefix,'[',i,']'].join('');p[root+'[field]']=f.field;dataPrefix=root+'[data]';for(key in f.data){p[[dataPrefix,'[',key,']'].join('')]=f.data[key];}}}else{tmp=[];for(i=0;i<len;i++){f=filters[i];tmp.push(Ext.apply({},{field:f.field},f.data));}
if(tmp.length>0){p[this.paramPrefix]=Ext.util.JSON.encode(tmp);}}
return p;},cleanParams:function(p){if(this.encode){delete p[this.paramPrefix];}else{var regex,key;regex=new RegExp('^'+this.paramPrefix+'\[[0-9]+\]');for(key in p){if(regex.test(key)){delete p[key];}}}},getFilterClass:function(type){switch(type){case'auto':type='string';break;case'int':case'float':type='numeric';break;case'bool':type='boolean';break;}
return Ext.ux.grid.filter[type.substr(0,1).toUpperCase()+type.substr(1)+'Filter'];}});Ext.preg('gridfilters',Ext.ux.grid.GridFilters);

Ext.namespace('Ext.ux.grid.filter');Ext.ux.grid.filter.Filter=Ext.extend(Ext.util.Observable,{active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(config){Ext.apply(this,config);this.addEvents('activate','deactivate','serialize','update');Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=new Ext.menu.Menu();this.init(config);if(config&&config.value){this.setValue(config.value);this.setActive(config.active!==false,true);delete config.value;}},destroy:function(){if(this.menu){this.menu.destroy();}
this.purgeListeners();},init:Ext.emptyFn,getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true;},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true;},serialize:function(){var args=this.getSerialArgs();this.fireEvent('serialize',args,this);return args;},fireUpdate:function(){if(this.active){this.fireEvent('update',this);}
this.setActive(this.isActivatable());},setActive:function(active,suppressEvent){if(this.active!=active){this.active=active;if(suppressEvent!==true){this.fireEvent(active?'activate':'deactivate',this);}}}});

Ext.ux.grid.filter.StringFilter=Ext.extend(Ext.ux.grid.filter.Filter,{iconCls:'ux-gridfilter-text-icon',emptyText:'Enter Filter Text...',selectOnFocus:true,width:125,init:function(config){Ext.applyIf(config,{enableKeyEvents:true,iconCls:this.iconCls,listeners:{scope:this,keyup:this.onInputKeyUp}});this.inputItem=new Ext.form.TextField(config);this.menu.add(this.inputItem);this.updateTask=new Ext.util.DelayedTask(this.fireUpdate,this);},getValue:function(){return this.inputItem.getValue();},setValue:function(value){this.inputItem.setValue(value);this.fireEvent('update',this);},isActivatable:function(){return this.inputItem.getValue().length>0;},getSerialArgs:function(){return{type:'string',value:this.getValue()};},validateRecord:function(record){var val=record.get(this.dataIndex);if(typeof val!='string'){return(this.getValue().length===0);}
return val.toLowerCase().indexOf(this.getValue().toLowerCase())>-1;},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide(true);return;}
this.updateTask.delay(this.updateBuffer);}});

Ext.ux.grid.filter.DateFilter=Ext.extend(Ext.ux.grid.filter.Filter,{afterText:'After',beforeText:'Before',compareMap:{before:'lt',after:'gt',on:'eq'},dateFormat:'m/d/Y',menuItems:['before','after','-','on'],menuItemCfgs:{selectOnFocus:true,width:125},onText:'On',pickerOpts:{},init:function(config){var menuCfg,i,len,item,cfg,Cls;menuCfg=Ext.apply(this.pickerOpts,{minDate:this.minDate,maxDate:this.maxDate,format:this.dateFormat,listeners:{scope:this,select:this.onMenuSelect}});this.fields={};for(i=0,len=this.menuItems.length;i<len;i++){item=this.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,text:this[item+'Text'],menu:new Ext.menu.DateMenu(Ext.apply(menuCfg,{itemId:item})),listeners:{scope:this,checkchange:this.onCheckChange}};Cls=Ext.menu.CheckItem;item=this.fields[item]=new Cls(cfg);}
this.menu.add(item);}},onCheckChange:function(){this.setActive(this.isActivatable());this.fireEvent('update',this);},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide(true);return;}},onMenuSelect:function(menuItem,value,picker){var fields=this.fields,field=this.fields[menuItem.itemId];field.setChecked(true);if(field==fields.on){fields.before.setChecked(false,true);fields.after.setChecked(false,true);}else{fields.on.setChecked(false,true);if(field==fields.after&&fields.before.menu.picker.value<value){fields.before.setChecked(false,true);}else if(field==fields.before&&fields.after.menu.picker.value>value){fields.after.setChecked(false,true);}}
this.fireEvent('update',this);},getValue:function(){var key,result={};for(key in this.fields){if(this.fields[key].checked){result[key]=this.fields[key].menu.picker.getValue();}}
return result;},setValue:function(value,preserve){var key;for(key in this.fields){if(value[key]){this.fields[key].menu.picker.setValue(value[key]);this.fields[key].setChecked(true);}else if(!preserve){this.fields[key].setChecked(false);}}
this.fireEvent('update',this);},isActivatable:function(){var key;for(key in this.fields){if(this.fields[key].checked){return true;}}
return false;},getSerialArgs:function(){var args=[];for(var key in this.fields){if(this.fields[key].checked){args.push({type:'date',comparison:this.compareMap[key],value:this.getFieldValue(key).format(this.dateFormat)});}}
return args;},getFieldValue:function(item){return this.fields[item].menu.picker.getValue();},getPicker:function(item){return this.fields[item].menu.picker;},validateRecord:function(record){var key,pickerValue,val=record.get(this.dataIndex);if(!Ext.isDate(val)){return false;}
val=val.clearTime(true).getTime();for(key in this.fields){if(this.fields[key].checked){pickerValue=this.getFieldValue(key).clearTime(true).getTime();if(key=='before'&&pickerValue<=val){return false;}
if(key=='after'&&pickerValue>=val){return false;}
if(key=='on'&&pickerValue!=val){return false;}}}
return true;}});

Ext.ux.grid.filter.ListFilter=Ext.extend(Ext.ux.grid.filter.Filter,{phpMode:false,init:function(config){this.dt=new Ext.util.DelayedTask(this.fireUpdate,this);if(this.menu){this.menu.destroy();}
this.menu=new Ext.ux.menu.ListMenu(config);this.menu.on('checkchange',this.onCheckChange,this);},getValue:function(){return this.menu.getSelected();},setValue:function(value){this.menu.setSelected(value);this.fireEvent('update',this);},isActivatable:function(){return this.getValue().length>0;},getSerialArgs:function(){var args={type:'list',value:this.phpMode?this.getValue().join(','):this.getValue()};return args;},onCheckChange:function(){this.dt.delay(this.updateBuffer);},validateRecord:function(record){return this.getValue().indexOf(record.get(this.dataIndex))>-1;}});

Ext.ux.grid.filter.NumericFilter=Ext.extend(Ext.ux.grid.filter.Filter,{fieldCls:Ext.form.NumberField,iconCls:{gt:'ux-rangemenu-gt',lt:'ux-rangemenu-lt',eq:'ux-rangemenu-eq'},menuItemCfgs:{emptyText:'Enter Filter Text...',selectOnFocus:true,width:125},menuItems:['lt','gt','-','eq'],init:function(config){if(this.menu){this.menu.destroy();}
this.menu=new Ext.ux.menu.RangeMenu(Ext.apply(config,{fieldCfg:this.fieldCfg||{},fieldCls:this.fieldCls,fields:this.fields||{},iconCls:this.iconCls,menuItemCfgs:this.menuItemCfgs,menuItems:this.menuItems,updateBuffer:this.updateBuffer}));this.menu.on('update',this.fireUpdate,this);},getValue:function(){return this.menu.getValue();},setValue:function(value){this.menu.setValue(value);},isActivatable:function(){var values=this.getValue();for(key in values){if(values[key]!==undefined){return true;}}
return false;},getSerialArgs:function(){var key,args=[],values=this.menu.getValue();for(key in values){args.push({type:'numeric',comparison:key,value:values[key]});}
return args;},validateRecord:function(record){var val=record.get(this.dataIndex),values=this.getValue();if(values.eq!==undefined&&val!=values.eq){return false;}
if(values.lt!==undefined&&val>=values.lt){return false;}
if(values.gt!==undefined&&val<=values.gt){return false;}
return true;}});

Ext.ux.grid.filter.BooleanFilter=Ext.extend(Ext.ux.grid.filter.Filter,{defaultValue:false,yesText:'Yes',noText:'No',init:function(config){var gId=Ext.id();this.options=[new Ext.menu.CheckItem({text:this.yesText,group:gId,checked:this.defaultValue===true}),new Ext.menu.CheckItem({text:this.noText,group:gId,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var i=0;i<this.options.length;i++){this.options[i].on('click',this.fireUpdate,this);this.options[i].on('checkchange',this.fireUpdate,this);}},getValue:function(){return this.options[0].checked;},setValue:function(value){this.options[value?0:1].setChecked(true);},getSerialArgs:function(){var args={type:'boolean',value:this.getValue()};return args;},validateRecord:function(record){return record.get(this.dataIndex)==this.getValue();}});

Ext.ns('ImagePortal')
ImagePortal.Notice=function(config){var msgCt;function createBox(t,s){return['<div class="msg">','<div class="x-box-tl"><div class="x-box-tr"><div class="x-box-tc"></div></div></div>','<div class="x-box-ml"><div class="x-box-mr"><div class="x-box-mc"><h3>',t,'</h3>',s,'</div></div></div>','<div class="x-box-bl"><div class="x-box-br"><div class="x-box-bc"></div></div></div>','</div>'].join('');}
return{msg:function(title,format){if(!msgCt){msgCt=Ext.DomHelper.insertFirst(document.body,{id:'msg-div'},true);}
msgCt.alignTo(document,'t-t');var s=String.format.apply(String,Array.prototype.slice.call(arguments,1));var m=Ext.DomHelper.append(msgCt,{html:createBox(title,s)},true);m.slideIn('t').pause(4).ghost("t",{remove:true});},init:function(){var lb=Ext.get('lib-bar');if(lb){lb.show();}}};}();

Ext.namespace('ImagePortal');ImagePortal.downloadPanel=function(config){this.tpl=new Ext.Template('<div id="image_wrapper" style="width: {width}px; height: {height}px; background-image:url("http://images.cyberfloralouisiana.com/images/specimensheets/no/0/0/10/34/");"></div>');Ext.apply(this,config,{title:'Download Image',id:'dimg',border:false,autoScroll:true,listeners:{activate:function(){window.open('http://images.cyberfloralouisiana.com/images/specimensheets/no/0/0/10/34/NO0001034_s.jpg','_blank');}}})
ImagePortal.downloadPanel.superclass.constructor.call(this,config);}
Ext.extend(ImagePortal.downloadPanel,Ext.Panel,{getDwnlImage:function(){Ext.Ajax.request({url:'../silverarchive_remote/api/silverarchive.php',params:{cmd:'get_image',image_id:'NLU0001804',width:900,height:900},scope:this,success:function(r){var data=Ext.decode(r.responseText);if(data.success){var panel=Ext.getCmp('dimg');this.tpl.overwrite(panel.body,data.data);}},failure:function(){}});}})

Ext.namespace('ImagePortal');ImagePortal.ImageInfoPanel=function(config){this.filedTpl=new Ext.XTemplate('<div style="visibility: visible; height: 100%; position: relative; width: 100%;" class="dataview" id="dataview3">'+'<div style="padding: 1px; height: 22px;border-top:1px solid #AAAAAA;" class="detailrow1">'+'<div style="margin-left: 24px; margin-top: 5px;"></div>'+'<tpl if="image_id != 0">'+'<div class="detailrow1"><div class="detaillabel">Image Id at</div><div class="detailtext">{image_id}</div></div>'+'</tpl>'+'<tpl if="filename!= 0">'+'<div class="detailrow1"><div class="detaillabel">Filename</div><div class="detailtext">{filename}</div></div>'+'</tpl>'+'<tpl if="barcode != 0">'+'<div class="detailrow1"><div class="detaillabel">Barcode</div><div class="detailtext">{barcode}</div></div>'+'</tpl>'+'<tpl if="timestamp_modified!= 0">'+'<div class="detailrow1"><div class="detaillabel">Last Modified</div><div class="detailtext">{timestamp_modified}</div></div>'+'</tpl>'+'<tpl if="Family != 0">'+'<div class="detailrow1"><div class="detaillabel">Family</div><div class="detailtext">{Family}</div></div>'+'</tpl>'+'<tpl if="Genus != 0">'+'<div class="detailrow1"><div class="detaillabel">Genus</div><div class="detailtext">{Genus}</div></div>'+'</tpl>'+'<tpl if="SpecificEpithet!= 0">'+'<div class="detailrow1"><div class="detaillabel">Specific Epithet</div><div class="detailtext">{SpecificEpithet}</div></div>'+'</tpl>'+'<div class="detailrow1"><div class="detaillabel">Flickr PlantID</div><div class="detailtext">{flickr_PlantID}</div></div>'+'<div class="detailrow1"><div class="detaillabel">Picassa PlantID</div><div class="detailtext">{picassa_PlantID}</div></div>'+'<tpl if="picassa_modified!= 0">'+'<div class="detailrow1"><div class="detaillabel">Picassa Modified</div><div class="detailtext">{picassa_modified}</div></div>'+'</tpl>'+'<tpl if="picassa_modified== 0">'+'<div class="detailrow1"><div class="detaillabel">Picassa Modified</div><div class="detailtext">&nbsp;</div></div>'+'</tpl>'+'<tpl if="gTileProcessed!= 0">'+'<div class="detailrow1"><div class="detaillabel">Tiled Processed</div><div class="detailtext">{gTileProcessed}</div></div>'+'</tpl>'+'<tpl if="gTileProcessed== 0">'+'<div class="detailrow1"><div class="detaillabel">Tiled Processed</div><div class="detailtext">&nbsp;</div></div>'+'</tpl>'+'<div class="detailrow1"><div class="detaillabel">Zoom Enabled</div><div class="detailtext">{zoomEnabled}</div></div>'+'<tpl if="processed!= 0">'+'<div class="detailrow1"><div class="detaillabel">Processed</div><div class="detailtext">{processed}</div></div>'+'</tpl>'+'<tpl if="processed == 0">'+'<div class="detailrow1"><div class="detaillabel">Processed</div><div class="detailtext">&nbsp;</div></div>'+'</tpl>'+'</div>')
Ext.apply(this,config,{title:'Image Info',scope:this,ref:'../infopanel',border:false,autoScroll:true})
ImagePortal.ImageInfoPanel.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.ImageInfoPanel,Ext.Panel,{showInfoData:function(data){this.filedTpl.overwrite(this.body,data.data);}});

Ext.namespace('ImagePortal');ImagePortal.IVFlickr=function(config){this.flicTpl=new Ext.XTemplate('<tpl>'+'<a href="http://www.flickr.com/photos/cyberfloralouisiana/{server}/" title="{barcode} by cyberfloralouisiana, on Flickr"><img src="http://farm4.static.flickr.com/{server}/{flickr_PlantID}_{secret}.jpg" width="859" height="1024" alt={barcode} /></a>'+'</tpl>')
Ext.apply(this,config,{title:'Flickr',id:'fid',border:false,autoScroll:true,listeners:{}})
ImagePortal.IVFlickr.superclass.constructor.apply(this,arguments);};Ext.extend(ImagePortal.IVFlickr,Ext.Panel,{loadFilckerImage:function(data){this.flicTpl.overwrite(this.body,data.data);}});Ext.reg('ivflickr',ImagePortal.IVFlickr);

Ext.namespace('ImagePortal');ImagePortal.IVIntractive=function(config){Ext.apply(this,config,{zoomLevel:2,id:'map-canvas',border:true,mapConfOpts:['enableScrollWheelZoom','enableDoubleClickZoom','enableDragging'],mapControls:['GSmallMapControl','GMapTypeControl'],setCenter:{lat:30,lng:-90},width:600,height:400,title:'Specimen Image',ismapReady:false});ImagePortal.IVIntractive.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.IVIntractive,Ext.ux.GMapPanel,{drawImage:function(imagePath){var imgTiles=new google.maps.ImageMapType({getTileUrl:function(ll,z){var X=ll.x%(1<<z);var path=imagePath+"google_tiles/"+(5-z)+"/tile_"+(5-z)+"_"+X+"_"+ll.y+".jpg";return path;},tileSize:new google.maps.Size(256,256),isPng:false,maxZoom:5,name:"Image",minZoom:0,alt:"Specimen Sheet Image"});if(!this.ismapReady){this.ismapReady=true;this.on('mapready',function(map){map.getMap().mapTypes.set('image',imgTiles);map.getMap().setMapTypeId('image');map.getMap().unbind(map.getMap().mapTypes.roadmap);});}else{if(Ext.isDefined(this.getMap())){this.getMap().mapTypes.set('image',imgTiles);this.getMap().setMapTypeId('image');}}}});Ext.reg('ivinteractive',ImagePortal.IVIntractive);

Ext.namespace("ImagePortal")
ImagePortal.CustomeInputPopup=function(config){var store=new Ext.data.ArrayStore({fields:['id','fltype']});var data=[['jpeg','jpeg'],['png','png'],['jpg','jpg']];store.loadData(data);Ext.apply(config,config,{title:'Custom Size',height:150,width:250,resizable:false,modal:true,buttons:[{text:'Download',ref:'../download',scope:this,border:true,width:50,handler:this.download},{text:'Cancel',ref:'../cancel',scope:this,border:true,width:50,handler:this.cancel}],items:[{xtype:'form',border:false,bodyStyle:'padding:10px',items:[{fieldLabel:'Width',name:'flwidth',xtype:'numberfield',ref:'../flwidth',width:90,height:20,scope:this},{fieldLabel:'Height',name:'flheight',xtype:'numberfield',ref:'../flheight',width:90,height:20,scope:this},{xtype:'combo',fieldLabel:'File Type',store:store,displayField:'fltype',valueField:'fltype',mode:'local',ref:'../fltype',value:'jpeg',width:90,height:20,scope:this,editable:false,emptyText:'Select',forceSelection:true,triggerAction:'all',selectOnFocus:true}]}]});ImagePortal.CustomeInputPopup.superclass.constructor.call(this,config)}
Ext.extend(ImagePortal.CustomeInputPopup,Ext.Window,{download:function(){var flwidth=this.flwidth.getValue();var flheight=this.flheight.getValue();var fltype=this.fltype.getValue();if(Ext.isEmpty(flwidth)&&Ext.isEmpty(flheight)){ImagePortal.Notice.msg("Notice","At least one dimension is required.")}else{var url=Config.baseUrl+"resources/api/api.php?cmd=get_image&width="+flwidth+"&height="+flheight+"&image_id="+this.image_id+"&type="+this.fltype.getValue()
window.open(url,'_blank');this.hide();}},cancel:function(){this.hide();}});

Ext.namespace("ImagePortal")
ImagePortal.ZoomImage=function(config){Ext.apply(this,config,{});ImagePortal.ZoomImage.superclass.constructor.call(this,config);}
Ext.extend(ImagePortal.ZoomImage,Ext.ux.GMapPanel,{varMap:function(){var map=this.map
return this.map;},CustomGetTileUrl:function(a,b){var path=this.path+"google_tiles/"+(5-b)+"/tile_"+1+"_"+a.x+"_"+a.y+".jpg";return path;},drawImage:function(path){this.path=path;var copyright=new GCopyright(1,new GLatLngBounds(new GLatLng(-90,-180),new GLatLng(90,180)),0,this.copyright);var copyrightCollection=new GCopyrightCollection('(Specimen: ...)');copyrightCollection.addCopyright(copyright);var tileLayers=[new GTileLayer(copyrightCollection,1,5)];tileLayers[0].getTileUrl=this.CustomGetTileUrl.createDelegate(this);var map=this.getMap();map.removeMapType(map.getCurrentMapType());var custommap=new GMapType(tileLayers,new GMercatorProjection(18),"Images");map.addMapType(custommap);map.removeMapType(G_SATELLITE_MAP);map.removeMapType(G_HYBRID_MAP);map.removeMapType(G_NORMAL_MAP);var centerLat=0,centerLong=0,initialZoom=1;map.setCenter(new GLatLng(centerLat,centerLong),initialZoom,custommap);map.setZoom(parseInt(initialZoom));}});Ext.reg('IPZoomImage',ImagePortal.ZoomImage);

Ext.namespace('ImagePortal');ImagePortal.ImageViewer=function(config){this.infoTabPanel=new ImagePortal.ImageInfoPanel();this.largeImagePanel=new Ext.Panel({title:'Large Image',autoScroll:true,tpl:new Ext.XTemplate('<div><img src={path}></div>')});this.intimage=new ImagePortal.IVIntractive();this.flicker=new ImagePortal.IVFlickr();Ext.apply(this,config,{title:'Image Viewer',width:800,height:500,modal:true,autoScroll:true,layout:'fit',ref:'../imagevp',maximizable:true,tbar:[{text:'Download',menu:[{text:'Small',scope:this,handler:this.dnldSmallImg},{text:'Medium',scope:this,handler:this.dnldMediumImg},{text:'Large',scope:this,handler:this.dnldLargeImg},{text:'Original',scope:this,handler:this.dnldOriginalImg},{text:'Custom',scope:this,handler:this.dnldCustomImg}]}],buttons:[{text:'Close',scope:this,handler:function(){this.close();}}],items:[{xtype:'tabpanel',id:'tabId',activeTab:0,deferredRender:false,border:false,items:[this.intimage,this.largeImagePanel,this.infoTabPanel,this.flicker]}]});ImagePortal.ImageViewer.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.ImageViewer,Ext.Window,{showLargeImage:function(path){this.largeImagePanel.update({path:path});},hideInteractiveTab:function(hideunhide,path,fileName){var largeFileName=fileName.split(".");if(hideunhide==1){Ext.getCmp('tabId').hideTabStripItem(this.largeImagePanel);Ext.getCmp('tabId').unhideTabStripItem(this.intimage);Ext.getCmp('tabId').setActiveTab(0);this.showImage(path);}else{Ext.getCmp('tabId').hideTabStripItem(this.intimage);Ext.getCmp('tabId').unhideTabStripItem(this.largeImagePanel);Ext.getCmp('tabId').setActiveTab(1);this.showLargeImage(path+largeFileName[0]+'_l.'+largeFileName[1]);}},hideFlickerTab:function(fId,data){if(fId!=0&&fId>0){Ext.getCmp('tabId').unhideTabStripItem(this.flicker);this.flicker.loadFilckerImage(data);}else{Ext.getCmp('tabId').hideTabStripItem(this.flicker);if(Ext.getCmp('tabId').getActiveTab().title=='Flickr');{this.hideInteractiveTab(data.data.gTileProcessed,data.data.path,data.data.filename);}}},dnldSmallImg:function(){window.open(this.dwnpath+this.imgbarcode+'_s.jpg','_blank');},dnldMediumImg:function(){window.open(this.dwnpath+this.imgbarcode+'_m.jpg','_blank');},dnldLargeImg:function(){window.open(this.dwnpath+this.imgbarcode+'_l.jpg','_blank');},dnldOriginalImg:function(){window.open(this.dwnpath+this.imgbarcode+'.jpg','_blank');},setBarcode:function(barcode,image_id){this.imgbarcode=barcode;this.image_id=image_id;},showImage:function(imagePath){this.intimage.drawImage(imagePath);},showInfoData:function(data){this.infoTabPanel.showInfoData(data);},dnldCustomImg:function(){var imageId=this.image_id;var popup=new ImagePortal.CustomeInputPopup({image_id:imageId});popup.show();},disableFlickerTab:function(){var filc=this.findTab('Flickr');if(filc){this.deactiveFlickerTab();filc.disable();}},enableFlickerTab:function(){var filc=this.findTab('Flickr');if(filc){filc.enable();}},deactiveFlickerTab:function(){var tab=Ext.getCmp('tabId');var active=tab.getActiveTab();var filc=this.findTab('Flickr');if(active==filc){tab.setActiveTab(0);}},findTab:function(vartitle){var findtab=null;Ext.getCmp('tabId').items.each(function(rec){if(rec.title==vartitle){findtab=rec;}});return findtab;}});

Ext.namespace('ImagePortal');ImagePortal.Image=function(config){this.proxy='';var staticIndex=0;if(Config.mode=='local'){this.proxy=new Ext.data.HttpProxy({url:Config.baseUrl+'resources/api/api.php'});}else{this.proxy=new Ext.data.ScriptTagProxy({url:Config.baseUrl+'resources/api/api.php'})}
this.store=new Ext.data.GroupingStore({proxy:this.proxy,baseParams:{cmd:'images',filters:'',code:''},reader:new Ext.data.JsonReader({root:'data',totalProperty:'totalCount',fields:[{name:'image_id'},{name:'filename'},{name:'timestamp_modified'},{name:'barcode'},{name:'Family'},{name:'Genus'},{name:'SpecificEpithet'},{name:'flickr_PlantID'},{name:'flickr_modified'},{name:'picassa_PlantID'},{name:'picassa_modified'},{name:'gTileProcessed'},{name:'zoomEnabled'},{name:'processed'},{name:'path'},{name:'server'},{name:'farm'}]}),remoteSort:true,sortInfo:'login',groupField:''});var encode=false;var filters=new Ext.ux.grid.GridFilters({encode:encode,filters:[{type:'string',dataIndex:'filename'},{type:'string',dataIndex:'barcode'},{type:'string',dataIndex:'Family'},{type:'string',dataIndex:'Genus'},{type:'string',dataIndex:'SpecificEpithet'},{type:'date',dataIndex:'timestamp_modified'},{type:'date',dataIndex:'picassa_modified',format:'mm-dd-yyyy'},{type:'string',dataIndex:'flickr_PlantID'},{type:'numeric',dataIndex:'picassa_PlantID',options:['0','1']},{type:'numeric',dataIndex:'gTileProcessed',options:['0','1']},{type:'numeric',dataIndex:'processed',options:['0','1']}]});this.comboStore=new Ext.data.JsonStore({fields:['collection_id','name','code'],proxy:this.proxy,baseParams:{cmd:'collections'},root:'records',autoLoad:false});this.search_value=new Ext.ux.TwinComboBox({fieldLabel:'Collections',name:'Collections',triggerAction:'all',store:this.comboStore,displayField:'name',typeAhead:false,hideTrigger2:false,hideTrigger1:true,editable:false,value:'',width:250,listeners:{select:function(combo,record){Ext.getCmp('imageGrid').store.baseParams.code=record.data.code;Ext.getCmp('imageGrid').store.load({params:{start:0,limit:100}});},clear:function(){Ext.getCmp('imageGrid').store.baseParams.code='';Ext.getCmp('imageGrid').store.load({params:{start:0,limit:100}});}}});this.both=new Ext.ux.XTemplate('<div class="x-grid3-row ux-explorerview-item ux-explorerview-mixed-item">'+'<tpl if="gTileProcessed == 1">'+'<div class="divZoom bothIconZoomIn"  title="Double click to view large image.">&nbsp;</div>'+'</tpl>'+'<div class="ux-explorerview-icon"><img onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" src="{path:this.testMirror}{barcode}_s.jpg"></div>'+'<div class="ux-explorerview-text"><div class="x-grid3-cell x-grid3-td-name" unselectable="on">{barcode} {Family}<br/>{Genus} {SpecificEpithet}<br/>'+'<tpl if="barcode != 0">'+'<span>Barcode: {barcode}</span><br>'+'</tpl>'+'<span>Date Added: {timestamp_modified:this.convDate}</span></div>'+'</div>'+'</div>');this.both.setMirror(Config.mirrors||[]);this.smallIcons=new Ext.ux.XTemplate('<div class="x-grid3-row ux-explorerview-item ux-explorerview-small-item">'+'<tpl if="gTileProcessed == 1">'+'<div class="divZoom smallIconZoomIn"  title="Double click to view large image.">&nbsp;</div>'+'</tpl>'+'<div class="ux-explorerview-icon"><img  '+'<tpl if="Family != \'\' || Genus != \'\' || SpecificEpithet != \'\' ">'+' qtip="'+'<tpl if="Family != \'\' " >{Family}<br></tpl>'+'<tpl if="Genus != \'\' " >{Genus} {SpecificEpithet}"</tpl>'+'</tpl>'+'src="{path:this.testMirror}{barcode}_s.jpg" onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" /></div>'+'</div>');this.smallIcons.setMirror(Config.mirrors);this.tileIcons=new Ext.ux.XTemplate('<div class="x-grid3-row ux-explorerview-item ux-explorerview-tiles-item">'+'<tpl if="gTileProcessed == 1">'+'<div class="divZoom largeIconZoomIn" title="Double click to view large image.">&nbsp;</div>'+'</tpl>'+'<div class="ux-explorerview-icon"><img onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" src="{path:this.testMirror}{barcode}_m.jpg"></div>'+'<div class="ux-explorerview-text"><div class="x-grid3-cell x-grid3-td-name" unselectable="on">{barcode}<br/> {Family}<span>{Genus} {SpecificEpithet}</span></div></div></div>');this.tileIcons.setMirror(Config.mirrors);this.rotatedImages=[];this.views=new Ext.CycleButton({showText:true,width:150,scope:this,prependText:'View as ',changeHandler:this.changeView,items:[{text:'Large',value:'large',iconCls:'icon_cycleImages'},{text:'Small',value:'small',checked:true,iconCls:'icon_cycleImages'},{text:'Both',value:'both',iconCls:'icon_cycleImages'},{text:'Details',value:'details',iconCls:'icon_cycleImages'}]});Ext.apply(this,config,{title:'Images',enableColumnMove:false,enableColumnHide:false,store:this.store,scope:this,plugins:[filters],loadMask:true,id:'imageGrid',loadedFirst:false,width:700,height:400,audit:[],tbar:['Collection: ',' ',this.search_value,' ',this.views,'->',{iconCls:'icon-rss',handler:function(){window.open(Config.baseUrl+'resources/api/api.php?cmd=images&code=&dir=ASC&filters=&output=rss','_blank');}}],columns:[{header:"Image Id",dataIndex:'image_id',width:50,sortable:true,hidden:Config.image_id||false},{header:"Collection",dataIndex:'',width:80,sortable:true},{header:"Filename",dataIndex:'filename',width:85,sortable:true,hidden:true},{header:"Barcode",dataIndex:'barcode',width:80,filterable:true,sortable:true},{header:"Last Modified",dataIndex:'timestamp_modified',width:120,sortable:true,scope:this,hidden:Config.lastModified||false,renderer:function(a){return(this.rendererDatehandling(a));}},{header:"Family",dataIndex:'Family',width:120,scope:this,sortable:true},{header:"Genus",dataIndex:'Genus',width:120,scope:this,sortable:true},{header:"Specific Epithet",dataIndex:'SpecificEpithet',width:120,scope:this,sortable:true},{header:"Flickr Avail",dataIndex:'flickr_PlantID',width:80,scope:this,filterable:true,filter:{type:'string'},hidden:Config.flickr_PlantID||false,sortable:true,renderer:function(a){return(this.rendererPlantID(a));}},{header:"Picassa Avail",dataIndex:'picassa_PlantID',width:80,scope:this,filterable:true,hidden:Config.picassa_PlantID||false,filter:{type:'numeric'},sortable:true,renderer:function(a){return(this.rendererPlantID(a));}},{header:"Picassa Modified",dataIndex:'picassa_modified',width:120,sortable:true,scope:this,hidden:true,renderer:function(a){return(this.rendererDatehandling(a));}},{header:"Tiled Processed",dataIndex:'gTileProcessed',width:80,scope:this,filterable:true,filter:{type:'numeric'},sortable:true,hidden:Config.gTileProcessed||false,renderer:function(a){return(this.renderergTileProcess(a));}},{header:"Zoom Enabled",dataIndex:'zoomEnabled',width:80,hidden:true,scope:this,sortable:true},{header:"Processed",dataIndex:'processed',width:80,scope:this,filterable:true,filter:{type:'numeric'},sortable:true,hidden:Config.processed||false,renderer:function(a){return(this.renderergTileProcess(a));}}],sm:new Ext.grid.RowSelectionModel({singleSelect:false}),viewConfig:{rowTemplate:this.smallIcons,multiSelect:false,singleSelect:true,emptyText:'No images available.',deferEmptyText:false,forceFit:true,hideColumns:true},bbar:new Ext.PagingToolbar({pageSize:100,store:this.store,scope:this,emptyMsg:'No images available.',displayInfo:true,displayMsg:'Displaying Specimen Images {0} - {1} of {2}',ref:'../pgtoolbar',items:['',{xtype:'button',text:'View Image',scope:this,handler:this.viewImage},' ',{text:"Send all to HelpingScience",scope:this,iconCls:'',id:'sendToHS',handler:function(){Ext.Msg.show({msg:'Are you sure ?',buttons:Ext.Msg.YESNO,icon:Ext.MessageBox.QUESTION,scope:this,fn:function(btn){if(btn=='yes'){var filterList=[];var record=this.filters.getFilterData()
var fillter=Ext.encode(filterList);var comaprison=Ext.isDefined(record[0])?record[0].data.comparison:'';var value=Ext.isDefined(record[0])?record[0].data.value:'';Ext.Ajax.request({scope:this,url:'resources/api/bis2hs.php',params:{'filter[0][data][comparison]':comaprison,'filter[0][data][type]':'date','filter[0][data][value]':value,'filter[0][field]':'timestamp_modified'},success:function(response){var response=Ext.decode(response.responseText);},failure:function(result){}});}}})}}]}),listeners:{rowcontextmenu:this.rightClickMenu,rowdblclick:function(grid,index,e){var imv=this.launchImage(index)
imv.show();var barcode=grid.getStore().getAt(index).get('barcode');var image_id=grid.getStore().getAt(index).get('image_id');var path=grid.getStore().getAt(index).get('path');var data=grid.getSelectionModel().getSelected(index);var fId=data.get('flickr_PlantID');imv.hideInteractiveTab(data.get('gTileProcessed'),data.data.path,data.data.filename);imv.hideFlickerTab(fId,data);imv.setBarcode(barcode,image_id);imv.showInfoData(data);}}})
ImagePortal.Image.superclass.constructor.call(this,config);}
Ext.extend(ImagePortal.Image,Ext.grid.GridPanel,{rendererDatehandling:function(value){if(value=='0000-00-00 00:00:00'){return String.format('');}else{var dt=Date.parseDate(value,"Y-m-d H:i:s",true);var dt1=new Date(dt);var dt2=dt1.format('m-d-Y');return dt2;}},rightClickMenu:function(grid,row,e){var record=grid.getSelectionModel().getSelections();if(record.length<=1){grid.getSelectionModel().selectRow(row);}
var items=[];items.push({text:"Rotate 90' Right",iconCls:'icon_rotate_right',scope:this,handler:function(){this.rotateImageGUI(grid,row,90);}},{text:"Rotate 90' Left",iconCls:'icon_rotate_left',scope:this,handler:function(){this.rotateImageGUI(grid,row,270);}},{text:"Rotate 180'",iconCls:'icon_rotate_image',scope:this,handler:function(){this.rotateImageGUI(grid,row,180);}},{text:"Audit",scope:this,handler:function(){this.imageName=[];for(i=0;i<record.length;i++){this.imageName.push(record[i].data.filename);}
ImagePortal.Notice.msg("Notice","Auditing please wait");Ext.Ajax.request({scope:this,url:'resources/api/api.php',params:{cmd:'audit',filenames:Ext.encode(this.imageName),autoProcess:Ext.encode({"small":true,"medium":true,"large":true})},success:function(response){var o=Ext.decode(response.responseText);var message=''
if(o.success){for(var i=0;i<o.recordCount;i++){var largeFound=(o.stats[i].details.large)?'Found.':'Not Found.';var mediumFound=(o.stats[i].details.medium)?'Found.':'Not Found.';var smallFound=(o.stats[i].details.small)?'Found.':'Not Found.';message='Images: '+o.stats[i].file+'<br/>Large: '+largeFound+'<br/>Medium: '+mediumFound+'<br/>Small: '+smallFound;ImagePortal.Notice.msg("Notice",message);}}},failure:function(result){console.log("Fail",result)}});}},{text:"Process OCR",scope:this,handler:function(){Ext.Ajax.request({scope:this,url:'resources/api/backup_services.php',params:{cmd:'processOCR',limit:'',stop:''},success:function(response){var response=Ext.decode(response.responseText);console.log("Success",response);},failure:function(result){console.log("Fail",result)}});}},{text:"Process Tiles",scope:this,handler:function(){this.imageName=[];for(i=0;i<record.length;i++){this.imageName.push(record[i].data.filename);}
Ext.Ajax.request({scope:this,url:'resources/api/api.php',params:{cmd:'audit',filenames:Ext.encode(this.imageName),autoProcess:Ext.encode({"google_tile":true})},success:function(response){var o=Ext.decode(response.responseText);},failure:function(result){console.log("Fail",result)}});}},{text:"Send to HelpingScience",scope:this,handler:function(){var barcodeList=[];for(i=0;i<record.length;i++){barcodeList.push(record[i].data.barcode);}
if(Ext.isEmpty(barcodeList)){ImagePortal.Notice.msg('Notice','Please select barcode.');}else{this.sendHSQueue(barcodeList);}}},'-',{text:"Delete Record",iconCls:'icon_delete_image',scope:this,handler:function(){this.sendDeleteRequest(grid,row,null);}});var menu=new Ext.menu.Menu({items:items,record:record});var xy=e.getXY();menu.showAt(xy);},sendDeleteRequest:function(grid,index,column){var items=grid.getStore().getAt(index).data;function process(btn,text){if(btn==='yes'){var params={};Ext.apply(params,{cmd:'delete-image',image_id:items.image_id});Ext.Ajax.request({url:Config.baseUrl+'resources/api/api.php',scope:this,params:params,success:function(responseObject){var o=Ext.decode(responseObject.responseText);if(o.success){Ext.getCmp('imageGrid').store.reload()
ImagePortal.Notice.msg('Success','Image successfuly deletetd');}else{Ext.MessageBox.alert('Error: '+o.error.code,o.error.message);}}});}};Ext.MessageBox.confirm('Delete Image','The selected image will be deleted.<br>Are you sure you wish to delete this image?',process);},sendHSQueue:function(barcodeList){Ext.Ajax.request({scope:this,url:'resources/api/bis2hs.php',params:{barcode:Ext.encode(barcodeList)},success:function(response){var response=Ext.decode(response.responseText);if(response.barcodesAdded==1){ImagePortal.Notice.msg('Notice','Selected barcodes is already sent to helping science.');}},failure:function(result){}});},rotateImageGUI:function(grid,row,degree){var data=this.getSelectionModel().getSelections()[0].data;var params={};Ext.apply(params,{cmd:'rotate-images',image_id:data.image_id,degree:degree});ImagePortal.Notice.msg('Notice','Sending request...')
Ext.Ajax.request({url:Config.baseUrl+'resources/api/api.php',scope:this,params:params,success:function(responseObject){var o=Ext.decode(responseObject.responseText);if(o.success){ImagePortal.Notice.msg('Notice',o.message);}else{Ext.MessageBox.alert('Error: '+o.error.code,o.error.message);}}});},reloadtheStore:function(){this.store.reload();},changeView:function(item,checked){var tpl;switch(item.activeItem.value){case'large':tpl=this.tileIcons;break;case'small':tpl=this.smallIcons;break;case'both':tpl=this.both;break;default:tmp=null;}
this.getView().changeTemplate(tpl);},renderergTileProcess:function(value){if(value==1)return String.format('Yes');else return String.format('');},rendererPlantID:function(value){if(value!=0&&value>0)return String.format('Yes');else return String.format('');},viewImage:function(){if(this.getSelectionModel().getSelections()!=''){var index=this.getStore().indexOfId(this.getSelectionModel().getSelected().id);var imv=this.launchImage(index)
var data=this.getStore().getAt(index);imv.show();imv.hideInteractiveTab(data.data.gTileProcessed,data.data.path,data.data.filename);imv.hideFlickerTab(data.data.flickr_PlantID,data);var barcode=data.data.barcode;imv.setBarcode(barcode,data.data.image_id);imv.showInfoData(data);}},launchImage:function(index){var rowindex=index;var imv=new ImagePortal.ImageViewer({scope:this,dwnpath:this.store.getAt(rowindex).get('path'),tools:[{id:'left',qtip:'Go to previous image',scope:this,handler:function(event,toolEl,panel){rowindex=rowindex-1;if(rowindex<0){var tb=this.getBottomToolbar();if((tb.items.items[0].enable())){Ext.override(Ext.PagingToolbar,{movePrevious:function(){this.doLoad(Math.max(0,this.cursor-this.pageSize));tb.on('change',function(){rowindex=99;if(Ext.isDefined(this.store.getAt(rowindex))){var barcode=this.store.getAt(rowindex).get('barcode');var path=this.store.getAt(rowindex).get('path');var interact=this.store.getAt(rowindex).get('gTileProcessed');var fileName=this.store.getAt(rowindex).get('filename');imv.dwnpath=path;var data=this.store.getAt(rowindex);imv.setBarcode(barcode,data.data.image_id,path);imv.hideInteractiveTab(interact,path,fileName);imv.showInfoData(data);this.ownerCt.getSelectionModel().selectRow(99);panel.setTitle(fileName);var fId=this.store.getAt(rowindex).get('flickr_PlantID');imv.hideFlickerTab(fId,data);}},this);}},this);this.getBottomToolbar().movePrevious();}}else{if(rowindex>-1){if(Ext.isDefined(this.store.getAt(rowindex))){var barcode=this.getStore().getAt(rowindex).get('barcode');var path=this.getStore().getAt(rowindex).get('path');imv.dwnpath=path
var data=this.getStore().getAt(rowindex);var interact=this.store.getAt(rowindex).get('gTileProcessed');var fileName=this.store.getAt(rowindex).get('filename');imv.setBarcode(barcode,data.data.image_id,path);imv.hideInteractiveTab(interact,path,fileName);imv.showInfoData(data);var fId=this.store.getAt(rowindex).get('flickr_PlantID');imv.hideFlickerTab(fId,data);panel.setTitle(fileName);this.getSelectionModel().selectRow(rowindex);}}else{rowindex=0;}}}},{id:'right',qtip:'Go to next image',scope:this,handler:function(event,toolEl,panel){rowindex=rowindex+1;var max=this.getStore().getTotalCount();if(rowindex<max){var tb=this.getBottomToolbar();if(rowindex>99){if((tb.items.items[7].enable())){Ext.override(Ext.PagingToolbar,{moveNext:function(){this.doLoad(this.cursor+this.pageSize);tb.on('change',function(){rowindex=0;if(Ext.isDefined(this.store.getAt(rowindex))){var barcode=this.store.getAt(rowindex).get('barcode');var path=this.store.getAt(rowindex).get('path');imv.dwnpath=path;var fId=this.store.getAt(rowindex).get('flickr_PlantID');var data=this.store.getAt(rowindex);var interact=this.store.getAt(rowindex).get('gTileProcessed');var fileName=this.store.getAt(rowindex).get('filename');imv.hideFlickerTab(fId,data);imv.showInfoData(data);imv.setBarcode(barcode,data.data.image_id,path);imv.hideInteractiveTab(interact,path,fileName);panel.setTitle(fileName);this.ownerCt.getSelectionModel().selectRow(rowindex);}},this);}},this);this.getBottomToolbar().moveNext();}}else{if(Ext.isDefined(this.store.getAt(rowindex))){var barcode=this.getStore().getAt(rowindex).get('image_id');var path=this.getStore().getAt(rowindex).get('path');imv.dwnpath=path;var fId=this.getStore().getAt(rowindex).get('flickr_PlantID');var data=this.getStore().getAt(rowindex);var interact=this.store.getAt(rowindex).get('gTileProcessed');var fileName=this.store.getAt(rowindex).get('filename');imv.hideFlickerTab(fId,data);imv.showInfoData(data);imv.setBarcode(barcode,data.data.image_id,path);imv.hideInteractiveTab(interact,path,fileName);panel.setTitle(fileName);this.getSelectionModel().selectRow(rowindex);}}}else{rowindex=max-1;}}}]});return imv;}});

Ext.override(Ext.PagingToolbar,{});Ext.namespace('ImagePortal');ImagePortal.ImagePortalRemote=function(config){var config2={};Ext.apply(config2,config,{border:true,width:700,height:420});ImagePortal.ImagePortalRemote.superclass.constructor.call(this,config2);};Ext.extend(ImagePortal.ImagePortalRemote,ImagePortal.Image,{initLoadMethod:function(){this.getBottomToolbar().insert(13,this.views);Ext.getCmp('sendToHS').hide();this.store.baseParams=Config.imageStoreParams;this.store.load({params:{start:0,limit:100}});},rightClickMenu:function(grid,row,e){grid.getSelectionModel().selectRow(row);var record=grid.getSelectionModel().getSelected().data;var items=[];items.push({text:"View Image",scope:this,handler:this.viewImage});var menu=new Ext.menu.Menu({items:items,record:record});var xy=e.getXY();menu.showAt(xy);}});

Ext.namespace('ImagePortal');ImagePortal.PieReport=function(config){var store=new Ext.data.JsonStore({url:'resources/api/api.php',root:'results',baseParams:{cmd:'browse'},fields:[{name:'nodeValue',type:'string'},{name:'specimenCount',type:'int'}]},this);store.on('beforeload',this.setParams,this);store.on('load',this.onLoadCallback,this);Ext.apply(this,config,{layout:'fit',defaults:{border:false},store:store,columns:[{dataIndex:'nodeValue',label:'Taxanomy'},{dataIndex:'specimenCount',label:'Specimen Count'}],visualizationPkg:{'piechart':'PieChart'},visualizationCfg:{legend:'label',pieJoinAngle:5}});ImagePortal.PieReport.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.PieReport,Ext.ux.GVisualizationPanel,{reloadReports:function(){this.store.load();},setParams:function(){var node=this.node;this.store.baseParams.nodeApi=node.attributes.nodeApi;this.store.baseParams.nodeValue=node.attributes.nodeValue;this.store.baseParams.filter=Ext.encode(node.attributes.filter);}});

Ext.namespace('ImagePortal');ImagePortal.BarReport=function(config){this.store=new Ext.data.JsonStore({url:'resources/api/api.php',root:'results',baseParams:{cmd:'getCollectionSpecimenCount'},fields:[{name:'CollectionCode',type:'string'},{name:'ct',type:'int'}]},this);this.store.on('beforeload',this.setParams,this);this.store.on('load',this.onLoadCallback,this);Ext.apply(this,config,{layout:'fit',defaults:{border:false},items:{xtype:'stackedbarchart',store:this.store,yField:'CollectionCode',xField:'ct',xAxis:new Ext.chart.NumericAxis({stackingEnabled:false,labelRenderer:Ext.util.Format.numberRenderer('0,0')}),series:[{displayName:'Number of Specimens: '}]}});ImagePortal.BarReport.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.BarReport,Ext.Panel,{reloadReports:function(){this.store.load();},setParams:function(){var node=this.node;this.setText(node);this.store.baseParams.nodeApi=node.attributes.nodeApi;this.store.baseParams.nodeValue=node.attributes.nodeValue;},setText:function(node){this.setTitle(node.attributes.nodeValue);}});

Ext.namespace('ImagePortal');Ext.override(Ext.tree.TreeLoader,{createNode:function(attr){if(this.baseAttrs){Ext.applyIf(attr,this.baseAttrs);}
if(this.applyLoader!==false&&!attr.loader){attr.loader=this;}
if(typeof attr.uiProvider=='string'){attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider);}
if(attr.nodeType){return new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr);}else{return attr.leaf?new Ext.tree.TreeNode(attr):new Ext.tree.AsyncTreeNode(attr);}}});ImagePortal.ReportsTree=function(config){var chartMode=new Ext.CycleButton({showText:true,hidden:false,ref:'../chartMode',scope:this,items:[{text:'Taxonomy',value:'0'},{text:'Collection Distribution',value:'1'}],changeHandler:this.changeChartMode});Ext.apply(this,config,{autoScroll:true,defaults:{border:false},iconCls:'icon_chart_pie',autoScroll:true,split:true,useArrows:true,title:'Species',paramsBrowse:'',paramsFilter:'',rootVisible:false,tbar:[{xtype:'label',html:'Select report type:  '},chartMode],root:{text:'Root',expanded:true,draggable:false,expanded:true,nodeApi:'root',nodeValue:null,filter:null,children:[{reportType:'families',text:'Family',leaf:false,nodeValue:'Family',nodeApi:'alpha',filter:{},qtip:'Family report not available.',iconCls:'icon_chart_pie'},{reportType:'genus',text:'Genus',leaf:false,nodeValue:'Genus',nodeApi:'alpha',qtip:'Genus report not available.',iconCls:'icon_chart_pie'}]},loader:new Ext.tree.TreeLoader({dataUrl:Config.baseUrl+'resources/api/api.php',root:'results',disableCheckbox:true,baseParams:{cmd:'browse'},listeners:{loadexception:function(loader,node,response){node.unload();}},processResponse:function(response,node,callback,scope){var json=response.responseText;try{var o=response.responseData||Ext.decode(json);if(o.success){o=o.results;node.beginUpdate();for(var i=0,len=o.length;i<len;i++){if(typeof(o[i].checked)!="undefined"){if(this.disableCheckbox){delete(o[i].checked);}
o[i].qtip='Click to load '+o[i].nodeValue+' report.'}
o[i].iconCls='icon_chart_pie';var n=this.createNode(o[i]);if(n){node.appendChild(n);}}
node.endUpdate();}else{}
this.runCallback(callback,scope||node,[node]);}catch(e){}}}),listeners:{beforeLoad:this.applyFilters,click:this.logChecked,contextmenu:function(node){this.showcontextmenu(node);}.createDelegate(this)}});ImagePortal.ReportsTree.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.ReportsTree,Ext.tree.TreePanel,{collapseMenu:function(){this.collapse();},changeChartMode:function(item,checked){var activeChart=item.activeItem.value;var node=this.getSelectionModel().getSelectedNode();if(node==null)
return;if(node.attributes.nodeValue=='Family'||node.attributes.nodeValue=='Genus'){}else{this.fireEvent('loadChart',node,activeChart,this);}},expandMenu:function(){this.expand();},hideMenu:function(){this.hide();},showMenu:function(){this.show();},applyFilters:function(node){this.loader.baseParams=Ext.apply(this.loader.baseParams,{nodeApi:node.attributes.nodeApi,nodeValue:node.attributes.nodeValue,filter:Ext.encode(node.attributes.filter)});},logChecked:function(node){var activeChart=this.chartMode.activeItem.value;if(node.attributes.nodeValue=='Family'||node.attributes.nodeValue=='Genus'){}else{this.fireEvent('loadChart',node,activeChart,this);}},addBrowseFilter:function(store,opt){var list=this.browseTree.getChecked();var tmp=[];Ext.each(list,function(item){tmp.push({node_type:item.attributes.nodeApi,node_value:item.attributes.nodeValue,filter:item.attributes.filter});});opt.params.browse=Ext.encode(tmp);},showcontextmenu:function(node){var menu=new Ext.menu.Menu();var menu1=new Ext.menu.Item({text:'GBIF Checklist Bank',handler:function(node){window.open('http://ecat-dev.gbif.org/search?q='+node.attributes.nodeValue+'&rkey=1');}});var menu2=new Ext.menu.Item({text:'Wikispecies',handler:function(node){window.open('http://species.wikimedia.org/wiki/Carex_'+node.attributes.nodeValue);}});menu.show(node.ui.getAnchor());}})

Ext.namespace('ImagePortal');ImagePortal.ReportsPanel=function(config){this.reportTree=new ImagePortal.ReportsTree({region:'west',width:250,animCollapse:false,collapseMode:'mini'})
this.reportTree.on('loadChart',this.statsbyregion,this);this.pieChart=new ImagePortal.PieReport({});this.barChart=new ImagePortal.BarReport({});Ext.apply(this,config,{width:750,height:490,defaults:{border:false},iconCls:'icon_reports',paramsBrowse:'',paramsFilter:'',layout:'border',items:[this.reportTree,{region:'center',xtype:'panel',layout:'card',ref:'centerPanel',defaults:{border:false},title:'&nbsp;',items:[this.pieChart,this.barChart]}],listeners:{activate:function(){var list=this.reportTree.getRootNode().childNodes;Ext.each(list,function(item){if(item.isFirst()){item.select();item.getOwnerTree().fireEvent('nodeClicked',item,this);}})}}});ImagePortal.ReportsPanel.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.ReportsPanel,Ext.Panel,{statsbyregion:function(node,activeChart){if(activeChart=="0"){this.centerPanel.setTitle(node.attributes.nodeValue);this.pieChart.node=node;this.pieChart.reloadReports();this.centerPanel.getLayout().setActiveItem(0);}else{this.centerPanel.setTitle(node.attributes.nodeValue);this.barChart.node=node;this.barChart.reloadReports();this.centerPanel.getLayout().setActiveItem(1);}},findTab:function(varTitle){var findTab=null
this.centerPanel.items.each(function(rec){if(rec.title==varTitle){findTab=rec}})
return findTab}});
