/*
 * @copyright SilverBiology, LLC
 * @author Mike Giddens
 * @website http://www.silverbiology.com
 * 
 */


Ext.namespace('Ext.ux.panel');Ext.ux.GMapPanel=Ext.extend(Ext.Panel,{border:false,respErrors:[{code:400,msg:'A directions request could not be successfully parsed. For example, the request may have been rejected if it contained more than the maximum number of waypoints allowed.'},{code:G_GEO_SERVER_ERROR,msg:'A geocoding or directions request could not be successfully processed, yet the exact reason for the failure is not known.'},{code:601,msg:'The HTTP q parameter was either missing or had no value. For geocoding requests, this means that an empty address was specified as input. For directions requests, this means that no query was specified in the input.'},{code:G_GEO_MISSING_ADDRESS,msg:'Synonym for G_GEO_MISSING_QUERY.'},{code:G_GEO_UNKNOWN_ADDRESS,msg:'No corresponding geographic location could be found for the specified address. This may be due to the fact that the address is relatively new, or it may be incorrect.'},{code:G_GEO_UNAVAILABLE_ADDRESS,msg:'The geocode for the given address or the route for the given directions query cannot be returned due to legal or contractual reasons.'},{code:604,msg:'The GDirections object could not compute directions between the points mentioned in the query. This is usually because there is no route available between the two points, or because we do not have data for routing in that region.'},{code:G_GEO_BAD_KEY,msg:'The given key is either invalid or does not match the domain for which it was given.'},{code:G_GEO_TOO_MANY_QUERIES,msg:'The given key has gone over the requests limit in the 24 hour period or has submitted too many requests in too short a period of time. If you\'re sending multiple requests in parallel or in a tight loop, use a timer or pause in your code to make sure you don\'t send the requests too quickly.'}],respErrorTitle:'Error',geoErrorMsgUnable:'Unable to Locate the Address you provided',geoErrorTitle:'Address Location Error',geoErrorMsgAccuracy:'The address provided has a low accuracy.<br><br>Level {0} Accuracy (8 = Exact Match, 1 = Vague Match)',gmapType:'map',zoomLevel:3,yaw:180,pitch:0,displayGeoErrors:false,minGeoAccuracy:7,mapDefined:false,mapDefinedGMap:false,initComponent:function(){this.addEvents('mapready');Ext.ux.GMapPanel.superclass.initComponent.call(this);},afterRender:function(){Ext.ux.GMapPanel.superclass.afterRender.call(this);if(this.gmapType==='map'){this.gmap=new GMap2(this.body.dom);this.mapDefined=true;this.mapDefinedGMap=true;}
if(this.gmapType==='panorama'){this.gmap=new GStreetviewPanorama(this.body.dom);this.mapDefined=true;}
if(!this.mapDefined&&this.gmapType){this.gmap=new GMap2(this.body.dom);this.gmap.setMapType(this.gmapType);this.mapDefined=true;this.mapDefinedGMap=true;}
GEvent.bind(this.getMap(),'load',this,this.onMapReady);if(typeof this.setCenter==='object'){if(typeof this.setCenter.geoCodeAddr==='string'){this.geoCodeLookup(this.setCenter.geoCodeAddr,this.setCenter.marker,false,true,this.setCenter.listeners);}else{if(this.gmapType==='map'){var point=this.fixLatLng(new GLatLng(this.setCenter.lat,this.setCenter.lng));this.getMap().setCenter(point,this.zoomLevel);}
if(typeof this.setCenter.marker==='object'&&typeof point==='object'){this.addMarker(point,this.setCenter.marker,this.setCenter.marker.clear);}}
if(this.gmapType==='panorama'){this.getMap().setLocationAndPOV(new GLatLng(this.setCenter.lat,this.setCenter.lng),{yaw:this.yaw,pitch:this.pitch,zoom:this.zoomLevel});}}},onMapReady:function(){this.addMapControls();this.addOptions();this.addMarkers(this.markers);this.addKMLOverlay(this.autoLoadKML);this.fireEvent('mapready',this,this.getMap());},onResize:function(w,h){Ext.ux.GMapPanel.superclass.onResize.call(this,w,h);if(typeof this.getMap()=='object'){this.getMap().checkResize();}},setSize:function(width,height,animate){Ext.ux.GMapPanel.superclass.setSize.call(this,width,height,animate);if(typeof this.getMap()=='object'){this.getMap().checkResize();}},getMap:function(){return this.gmap;},getCenter:function(){return this.fixLatLng(this.getMap().getCenter());},getMinimumResolution:function(){},getMinimumResolution:function(){},getCenterLatLng:function(){var ll=this.getCenter();return{lat:ll.lat(),lng:ll.lng()};},addMarkers:function(markers){if(Ext.isArray(markers)){for(var i=0;i<markers.length;i++){if(typeof markers[i].geoCodeAddr=='string'){this.geoCodeLookup(markers[i].geoCodeAddr,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}else{var mkr_point=this.fixLatLng(new GLatLng(markers[i].lat,markers[i].lng));this.addMarker(mkr_point,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}}}},addMarker:function(point,marker,clear,center,listeners){Ext.applyIf(marker,G_DEFAULT_ICON);if(clear===true){this.getMap().clearOverlays();}
if(center===true){this.getMap().setCenter(point,this.zoomLevel);}
var mark=new GMarker(point,marker);if(typeof listeners==='object'){for(evt in listeners){GEvent.bind(mark,evt,this,listeners[evt]);}}
this.getMap().addOverlay(mark);},addMapControls:function(){if(this.gmapType==='map'){if(Ext.isArray(this.mapControls)){for(i=0;i<this.mapControls.length;i++){this.addMapControl(this.mapControls[i]);}}else if(typeof this.mapControls==='string'){this.addMapControl(this.mapControls);}else if(typeof this.mapControls==='object'){this.getMap().addControl(this.mapControls);}}},addMapControl:function(mc){var mcf=window[mc];if(typeof mcf==='function'){this.getMap().addControl(new mcf());}},addOptions:function(){if(Ext.isArray(this.mapConfOpts)){var mc;for(i=0;i<this.mapConfOpts.length;i++){this.addOption(this.mapConfOpts[i]);}}else if(typeof this.mapConfOpts==='string'){this.addOption(this.mapConfOpts);}},addOption:function(mo){var mof=this.getMap()[mo];if(typeof mof==='function'){this.getMap()[mo]();}},addKMLOverlay:function(kmlfile){if(typeof kmlfile==='string'&&kmlfile!==''){var geoXml=new GGeoXml(kmlfile);this.getMap().addOverlay(geoXml);}},geoCodeLookup:function(addr,marker,clear,center,listeners){if(!this.geocoder){this.geocoder=new GClientGeocoder();}
this.geocoder.getLocations(addr,this.addAddressToMap.createDelegate(this,[addr,marker,clear,center,listeners],true));},addAddressToMap:function(response,addr,marker,clear,center,listeners){if(!response||response.Status.code!=200){this.respErrorMsg(response.Status.code);}else{place=response.Placemark[0];addressinfo=place.AddressDetails;accuracy=addressinfo.Accuracy;if(accuracy===0){this.geoErrorMsg(this.geoErrorTitle,this.geoErrorMsgUnable);}else{if(accuracy<this.minGeoAccuracy){this.geoErrorMsg(this.geoErrorTitle,String.format(this.geoErrorMsgAccuracy,accuracy));}else{point=this.fixLatLng(new GLatLng(place.Point.coordinates[1],place.Point.coordinates[0]));if(center){this.getMap().setCenter(point,this.zoomLevel);}
if(typeof marker==='object'){if(!marker.title){marker.title=place.address;}
Ext.applyIf(marker,G_DEFAULT_ICON);this.addMarker(point,marker,clear,false,listeners);}}}}},geoErrorMsg:function(title,msg){if(this.displayGeoErrors){Ext.MessageBox.alert(title,msg);}},respErrorMsg:function(code){Ext.each(this.respErrors,function(obj){if(code==obj.code){Ext.MessageBox.alert(this.respErrorTitle,obj.msg);}},this);},fixLatLng:function(llo){if(this.getMap().getCurrentMapType()){if(this.getMap().getCurrentMapType().QO=='visible'){llo.lat(180-llo.lat());llo.lng(180-llo.lng());}}
return llo;}});Ext.reg('gmappanel',Ext.ux.GMapPanel);

Ext.namespace('ImagePortal');ImagePortal.IVIntractive=function(config){Ext.apply(this,config,{mapConfOpts:['enableScrollWheelZoom','enableDoubleClicZoom','enableDragging'],mapControls:['GMapControl','GMapTypeControl','NonExistantControl','GLargeMapControl'],featureConfig:['enableContinuousZoom','enableScrollWheelZoom','enableDragging'],controls:[new GLargeMapControl(),new GOverviewMapControl()],iconCls:'x-icon-templates',border:false,autoScroll:true,title:'Intractive',id:'map-canvas',border:false,setCenter:{lat:90,lng:-60},listeners:{afterLayout:function(){this.body.setStyle('background-color','#FFF');var dt=new Ext.util.DelayedTask();dt.delay(100,function(){this.setWidth("100%");this.getMap().setCenter(new GLatLng(45,-90));},this);}}});ImagePortal.IVIntractive.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.IVIntractive,Ext.ux.GMapPanel,{varMap:function(){var map=this.map
return this.map;},CustomGetTileUrl:function(a,b){var path=this.path+"google_tiles/"+(5-b)+"/tile_"+(5-b)+"_"+a.x+"_"+a.y+".jpg";return path;},drawImage:function(path){this.path=path;var copyright=new GCopyright(1,new GLatLngBounds(new GLatLng(-90,-180),new GLatLng(90,180)),0,this.copyright);var copyrightCollection=new GCopyrightCollection('(Specimen: ...)');copyrightCollection.addCopyright(copyright);var tileLayers=[new GTileLayer(copyrightCollection,2,5)];tileLayers[0].getTileUrl=this.CustomGetTileUrl.createDelegate(this);var map=this.getMap();var mapTypes=map.getMapTypes();var custommap=new GMapType(tileLayers,new GMercatorProjection(18),"Images");map.addMapType(custommap);Ext.each(mapTypes,function(item){if(item.getName()=="Images"){map.removeMapType(item);}});map.removeMapType(G_SATELLITE_MAP);map.removeMapType(G_HYBRID_MAP);map.removeMapType(G_NORMAL_MAP);var centerLat=50,centerLong=-80,initialZoom=1;map.setCenter(new GLatLng(centerLat,centerLong),initialZoom,custommap);map.setZoom(parseInt(initialZoom));},getImagePath:function(){if(this.ImgCount<0){this.ImgCount=this.specimenRecord.totalCount-1;}else if(this.ImgCount>this.specimenRecord.totalCount-1){this.ImgCount=0;}
this.getTopToolbar().info.setText((this.ImgCount+1)+' OF '+this.specimenRecord.totalCount);return(this.specimenRecord.images[this.ImgCount].path);},setupMap:function(){if(GBrowserIsCompatible()){map=new GMap2(document.getElementById("map_canvas"));map.addControl(new GLargeMapControl());map.setCenter(new GLatLng(60,-98),4);}}});Ext.reg('ivinteractive',ImagePortal.IVIntractive);

Ext.namespace('ImagePortal');ImagePortal.IVIntractiveRemote=function(config){var config2={};this.store=new Ext.data.JsonStore({proxy:new Ext.data.ScriptTagProxy({url:Config.baseUrl+'resources/api/api.php'}),fields:['barcode','image_id','path'],root:'data',baseParams:{cmd:'images'},listeners:{load:function(){this.sendIamgeData();},scope:this}});Ext.apply(config2,config,{border:true,height:550,width:400,title:'Image',iconCls:''});ImagePortal.IVIntractiveRemote.superclass.constructor.call(this,config2);};Ext.extend(ImagePortal.IVIntractiveRemote,ImagePortal.IVIntractive,{loadById:function(image_id){this.store.baseParams={cmd:'images',value:image_id,field:'image_id'}
this.store.load();},loadByBarcode:function(barcode){this.store.baseParams={cmd:'images',type:'list',value:barcode,field:'barcode'}
this.store.load();},sendIamgeData:function(){var data=this.store.getAt(0).data;this.drawImage(data.path);}});
