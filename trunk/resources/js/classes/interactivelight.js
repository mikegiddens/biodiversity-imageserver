/*
 * @copyright SilverBiology, LLC
 * @author Mike Giddens
 * @website http://www.silverbiology.com
 * 
 */


Ext.namespace('Ext.ux.panel');Ext.ux.GMapPanel=Ext.extend(Ext.Panel,{border:false,respErrors:[{code:'UNKNOWN_ERROR',msg:'A geocoding or directions request could not be successfully processed, yet the exact reason for the failure is not known.'},{code:'ERROR',msg:'There was a problem contacting the Google servers.'},{code:'ZERO_RESULTS',msg:'The request did not encounter any errors but returns zero results.'},{code:'INVALID_REQUEST',msg:'This request was invalid.'},{code:'REQUEST_DENIED',msg:'The webpage is not allowed to use the geocoder for some reason.'},{code:'OVER_QUERY_LIMIT',msg:'The webpage has gone over the requests limit in too short a period of time.'}],locationTypes:[{level:4,code:'ROOFTOP',msg:'The returned result is a precise geocode for which we have location information accurate down to street address precision.'},{level:3,code:'RANGE_INTERPOLATED',msg:'The returned result reflects an approximation (usually on a road) interpolated between two precise points (such as intersections). Interpolated results are generally returned when rooftop geocodes are unavailable for a street address.'},{level:2,code:'GEOMETRIC_CENTER',msg:'The returned result is the geometric center of a result such as a polyline (for example, a street) or polygon (region).'},{level:1,code:'APPROXIMATE',msg:'The returned result is approximate.'}],respErrorTitle:'Error',geoErrorMsgUnable:'Unable to Locate the Address you provided',geoErrorTitle:'Address Location Error',geoErrorMsgAccuracy:'The address provided has a low accuracy.<br><br>"{0}" Accuracy.<br><br>{1}',gmapType:'map',zoomLevel:3,yaw:180,pitch:0,displayGeoErrors:false,minGeoAccuracy:'ROOFTOP',mapDefined:false,mapDefinedGMap:false,initComponent:function(){this.addEvents('mapready','apiready');Ext.applyIf(this,{markers:[],cache:{marker:[],polyline:[],infowindow:[]}});Ext.ux.GMapPanel.superclass.initComponent.call(this);if(window.google&&window.google.maps){this.on('afterrender',this.apiReady,this);}else{window.gmapapiready=this.apiReady.createDelegate(this);this.buildScriptTag('http://maps.google.com/maps/api/js?sensor=false&callback=gmapapiready');}},apiReady:function(){if(this.rendered){(function(){var myOptions={panControl:true,zoomControl:true,scaleControl:false,mapTypeControl:false,streetViewControl:false,zoom:this.zoomLevel,mapTypeId:google.maps.MapTypeId.ROADMAP,backgroundColor:'#FFF'}
if(this.gmapType==='map'){this.gmap=new google.maps.Map(this.body.dom,myOptions);this.mapDefined=true;this.mapDefinedGMap=true;}
if(this.gmapType==='panorama'){this.gmap=new GStreetviewPanorama(this.body.dom);this.mapDefined=true;}
if(!this.mapDefined&&this.gmapType){this.gmap=new google.maps.Map(this.body.dom,{zoom:this.zoomLevel,mapTypeId:google.maps.MapTypeId.ROADMAP});this.gmap.setMapTypeId(this.gmapType);this.mapDefined=true;this.mapDefinedGMap=true;}
google.maps.event.addListenerOnce(this.getMap(),'tilesloaded',this.onMapReady.createDelegate(this));google.maps.event.addListener(this.getMap(),'dragend',this.dragEnd.createDelegate(this));if(typeof this.setCenter==='object'){if(typeof this.setCenter.geoCodeAddr==='string'){this.geoCodeLookup(this.setCenter.geoCodeAddr,this.setCenter.marker,false,true,this.setCenter.listeners);}else{if(this.gmapType==='map'){var point=new google.maps.LatLng(this.setCenter.lat,this.setCenter.lng);this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;}
if(typeof this.setCenter.marker==='object'&&typeof point==='object'){this.addMarker(point,this.setCenter.marker,this.setCenter.marker.clear);}}
if(this.gmapType==='panorama'){this.getMap().setLocationAndPOV(new google.maps.LatLng(this.setCenter.lat,this.setCenter.lng),{yaw:this.yaw,pitch:this.pitch,zoom:this.zoomLevel});}}}).defer(200,this);}else{this.on('afterrender',this.apiReady,this);}},afterRender:function(){Ext.ux.GMapPanel.superclass.afterRender.call(this);},buildScriptTag:function(filename,callback){var script=document.createElement('script'),head=document.getElementsByTagName("head")[0];script.type="text/javascript";script.src=filename;return head.appendChild(script);},onMapReady:function(){this.addMapControls();this.addOptions();this.addMarkers(this.markers);this.fireEvent('mapready',this,this.getMap());},onResize:function(w,h){Ext.ux.GMapPanel.superclass.onResize.call(this,w,h);if(typeof this.getMap()=='object'){google.maps.event.trigger(this.getMap(),'resize');if(this.lastCenter){this.getMap().setCenter(this.lastCenter,this.zoomLevel);}}},setSize:function(width,height,animate){Ext.ux.GMapPanel.superclass.setSize.call(this,width,height,animate);if(Ext.isObject(this.getMap())){google.maps.event.trigger(this.getMap(),'resize');if(this.lastCenter){this.getMap().setCenter(this.lastCenter,this.zoomLevel);}}},dragEnd:function(){this.lastCenter=this.getMap().getCenter();},getMap:function(){return this.gmap;},getCenter:function(){return this.getMap().getCenter();},getCenterLatLng:function(){var ll=this.getCenter();return{lat:ll.lat(),lng:ll.lng()};},addMarkers:function(markers){if(Ext.isArray(markers)){for(var i=0;i<markers.length;i++){if(markers[i]){if(typeof markers[i].geoCodeAddr=='string'){this.geoCodeLookup(markers[i].geoCodeAddr,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}else{var mkr_point=new google.maps.LatLng(markers[i].lat,markers[i].lng);this.addMarker(mkr_point,markers[i].marker,false,markers[i].setCenter,markers[i].listeners);}}}}},addMarker:function(point,marker,clear,center,listeners){Ext.applyIf(marker,{});if(clear===true){this.clearMarkers();}
if(center===true){this.getMap().setCenter(point,this.zoomLevel)
this.lastCenter=point;}
var mark=new google.maps.Marker(Ext.apply(marker,{position:point}));if(marker.infoWindow){this.createInfoWindow(marker.infoWindow,point,mark);}
this.cache.marker.push(mark);mark.setMap(this.getMap());if(typeof listeners==='object'){for(evt in listeners){google.maps.event.addListener(mark,evt,listeners[evt]);}}
return mark;},addPolyline:function(points,linestyle){var plinepnts=new google.maps.MVCArray,pline,linestyle=linestyle?linestyle:{strokeColor:'#FF0000',strokeOpacity:1.0,strokeWeight:2};Ext.each(points,function(point){plinepnts.push(new google.maps.LatLng(point.lat,point.lng));},this);var pline=new google.maps.Polyline(Ext.apply({path:plinepnts},linestyle));this.cache.polyline.push(pline);pline.setMap(this.getMap());},createInfoWindow:function(inwin,point,marker){var me=this,infoWindow=new google.maps.InfoWindow({content:inwin.content,position:point});if(marker){google.maps.event.addListener(marker,'click',function(){me.hideAllInfoWindows();infoWindow.open(me.getMap());});}
this.cache.infowindow.push(infoWindow);return infoWindow;},hideAllInfoWindows:function(){for(var i=0;i<this.cache.infowindow.length;i++){this.cache.infowindow[i].close();}},clearMarkers:function(){this.hideAllInfoWindows();this.hideMarkers();},hideMarkers:function(){Ext.each(this.cache.marker,function(mrk){mrk.setMap(null);});},showMarkers:function(){Ext.each(this.cache.marker,function(mrk){mrk.setMap(this.getMap());},this);},addMapControls:function(){if(this.gmapType==='map'){if(Ext.isArray(this.mapControls)){for(i=0;i<this.mapControls.length;i++){}}else if(typeof this.mapControls==='string'){}else if(typeof this.mapControls==='object'){}}},addMapControl:function(mc){var mcf=window[mc];if(typeof mcf==='function'){}},addOptions:function(){if(Ext.isArray(this.mapConfOpts)){var mc;for(i=0;i<this.mapConfOpts.length;i++){}}else if(typeof this.mapConfOpts==='string'){}},addOption:function(mo){var mof=this.getMap()[mo];if(typeof mof==='function'){this.getMap()[mo]();}},geoCodeLookup:function(addr,marker,clear,center,listeners){if(!this.geocoder){this.geocoder=new google.maps.Geocoder();}
this.geocoder.geocode({address:addr},this.addAddressToMap.createDelegate(this,[addr,marker,clear,center,listeners],true));},centerOnClientLocation:function(){this.getClientLocation(function(loc){var point=new google.maps.LatLng(loc.latitude,loc.longitude);this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;});},getClientLocation:function(fn,errorFn){if(!errorFn){errorFn=Ext.emptyFn;}
if(!this.clientGeo){this.clientGeo=google.gears.factory.create('beta.geolocation');}
geo.getCurrentPosition(fn.createDelegate(this),errorFn);},addAddressToMap:function(response,status,addr,marker,clear,center,listeners){if(!response||status!=='OK'){this.respErrorMsg(status);}else{var place=response[0].geometry.location,accuracy=this.getLocationTypeInfo(response[0].geometry.location_type,'level'),reqAccuracy=this.getLocationTypeInfo(this.minGeoAccuracy,'level');if(accuracy===0){this.geoErrorMsg(this.geoErrorTitle,this.geoErrorMsgUnable);}else{if(accuracy<reqAccuracy){this.geoErrorMsg(this.geoErrorTitle,String.format(this.geoErrorMsgAccuracy,response[0].geometry.location_type,this.getLocationTypeInfo(response[0].geometry.location_type,'msg')));}else{point=new google.maps.LatLng(place.xa,place.za);if(center){this.getMap().setCenter(point,this.zoomLevel);this.lastCenter=point;}
if(typeof marker==='object'){if(!marker.title){marker.title=response.formatted_address;}
var mkr=this.addMarker(point,marker,clear,false,listeners);if(marker.callback){marker.callback.call(this,mkr,point);}}}}}},geoErrorMsg:function(title,msg){if(this.displayGeoErrors){Ext.MessageBox.alert(title,msg);}},respErrorMsg:function(code){Ext.each(this.respErrors,function(obj){if(code==obj.code){Ext.MessageBox.alert(this.respErrorTitle,obj.msg);}},this);},getLocationTypeInfo:function(location_type,property){var val=0;Ext.each(this.locationTypes,function(itm){if(itm.code===location_type){val=itm[property];}});return val;}});Ext.reg('gmappanel',Ext.ux.GMapPanel);

Ext.namespace('ImagePortal');ImagePortal.IVIntractive=function(config){Ext.apply(this,config,{zoomLevel:2,id:'map-canvas',border:true,mapConfOpts:['enableScrollWheelZoom','enableDoubleClickZoom','enableDragging'],mapControls:['GSmallMapControl','GMapTypeControl'],setCenter:{lat:30,lng:-90},width:600,height:400,title:'Specimen Image',ismapReady:false});ImagePortal.IVIntractive.superclass.constructor.call(this,config);};Ext.extend(ImagePortal.IVIntractive,Ext.ux.GMapPanel,{drawImage:function(imagePath){var imgTiles=new google.maps.ImageMapType({getTileUrl:function(ll,z){var X=ll.x%(1<<z);var path=imagePath+"google_tiles/"+(5-z)+"/tile_"+(5-z)+"_"+X+"_"+ll.y+".jpg";return path;},tileSize:new google.maps.Size(256,256),isPng:false,maxZoom:5,name:"Image",minZoom:0,alt:"Specimen Sheet Image"});if(!this.ismapReady){this.ismapReady=true;this.on('mapready',function(map){map.getMap().mapTypes.set('image',imgTiles);map.getMap().setMapTypeId('image');map.getMap().unbind(map.getMap().mapTypes.roadmap);});}else{this.getMap().mapTypes.set('image',imgTiles);this.getMap().setMapTypeId('image');}}});Ext.reg('ivinteractive',ImagePortal.IVIntractive);

Ext.namespace('ImagePortal');ImagePortal.IVIntractiveRemote=function(config){var config2={};this.store=new Ext.data.JsonStore({proxy:new Ext.data.ScriptTagProxy({url:Config.baseUrl+'resources/api/api.php'}),fields:['barcode','image_id','path'],root:'data',baseParams:{cmd:'images'},listeners:{load:function(){this.sendIamgeData();},scope:this}});Ext.apply(config2,config,{border:true,height:550,width:400,title:'Image',iconCls:''});ImagePortal.IVIntractiveRemote.superclass.constructor.call(this,config2);};Ext.extend(ImagePortal.IVIntractiveRemote,ImagePortal.IVIntractive,{loadById:function(image_id){this.store.baseParams={cmd:'images',value:image_id,field:'image_id'}
this.store.load();},loadByBarcode:function(barcode){this.store.baseParams={cmd:'images',type:'list',value:barcode,field:'barcode'}
this.store.load();},sendIamgeData:function(){var data=this.store.getAt(0).data;this.drawImage(data.path);}});
