
Ext.define('Ext.ux.grid.filter.Filter',{extend:'Ext.util.Observable',active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(config){Ext.apply(this,config);this.addEvents('activate','deactivate','serialize','update');Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=this.createMenu(config);this.init(config);if(config&&config.value){this.setValue(config.value);this.setActive(config.active!==false,true);delete config.value;}},destroy:function(){if(this.menu){this.menu.destroy();}
this.clearListeners();},init:Ext.emptyFn,createMenu:function(config){return Ext.create('Ext.menu.Menu',config);},getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true;},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true;},serialize:function(){var args=this.getSerialArgs();this.fireEvent('serialize',args,this);return args;},fireUpdate:function(){if(this.active){this.fireEvent('update',this);}
this.setActive(this.isActivatable());},setActive:function(active,suppressEvent){if(this.active!=active){this.active=active;if(suppressEvent!==true){this.fireEvent(active?'activate':'deactivate',this);}}}});

Ext.define('Ext.ux.grid.menu.ListMenu',{extend:'Ext.menu.Menu',labelField:'text',loadingText:'Loading...',loadOnShow:true,single:false,constructor:function(cfg){this.selected=[];this.addEvents('checkchange');this.callParent([cfg=cfg||{}]);if(!cfg.store&&cfg.options){var options=[];for(var i=0,len=cfg.options.length;i<len;i++){var value=cfg.options[i];switch(Ext.type(value)){case'array':options.push(value);break;case'object':options.push([value.id,value[this.labelField]]);break;case'string':options.push([value,value]);break;}}
this.store=Ext.create('Ext.data.ArrayStore',{fields:['id',this.labelField],data:options,listeners:{'load':this.onLoad,scope:this}});this.loaded=true;}else{this.add({text:this.loadingText,iconCls:'loading-indicator'});this.store.on('load',this.onLoad,this);}},destroy:function(){if(this.store){this.store.destroy();}
this.callParent();},show:function(){var lastArgs=null;return function(){if(arguments.length===0){this.callParent(lastArgs);}else{lastArgs=arguments;if(this.loadOnShow&&!this.loaded){this.store.load();}
this.callParent(arguments);}};}(),onLoad:function(store,records){var me=this,visible=me.isVisible(),gid,item,itemValue,i,len;me.hide(false);me.removeAll(true);gid=me.single?Ext.id():null;for(i=0,len=records.length;i<len;i++){itemValue=records[i].get('id');item=Ext.create('Ext.menu.CheckItem',{text:records[i].get(me.labelField),group:gid,checked:Ext.Array.contains(me.selected,itemValue),hideOnClick:false,value:itemValue});item.on('checkchange',me.checkChange,me);me.add(item);}
me.loaded=true;if(visible){me.show();}
me.fireEvent('load',me,records);},getSelected:function(){return this.selected;},setSelected:function(value){value=this.selected=[].concat(value);if(this.loaded){this.items.each(function(item){item.setChecked(false,true);for(var i=0,len=value.length;i<len;i++){if(item.value==value[i]){item.setChecked(true,true);}}},this);}},checkChange:function(item,checked){var value=[];this.items.each(function(item){if(item.checked){value.push(item.value);}},this);this.selected=value;this.fireEvent('checkchange',item,checked);}});

Ext.define('Ext.ux.grid.menu.RangeMenu',{extend:'Ext.menu.Menu',fieldCls:'Ext.form.field.Number',iconCls:{gt:'ux-rangemenu-gt',lt:'ux-rangemenu-lt',eq:'ux-rangemenu-eq'},fieldLabels:{gt:'Greater Than',lt:'Less Than',eq:'Equal To'},menuItemCfgs:{emptyText:'Enter Number...',selectOnFocus:false,width:155},menuItems:['lt','gt','-','eq'],constructor:function(config){var me=this,fields,fieldCfg,i,len,item,cfg,Cls;me.callParent(arguments);fields=me.fields=me.fields||{};fieldCfg=me.fieldCfg=me.fieldCfg||{};me.addEvents('update');me.updateTask=Ext.create('Ext.util.DelayedTask',me.fireUpdate,me);for(i=0,len=me.menuItems.length;i<len;i++){item=me.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,enableKeyEvents:true,hideLabel:false,fieldLabel:me.iconTpl.apply({cls:me.iconCls[item]||'no-icon',text:me.fieldLabels[item]||'',src:Ext.BLANK_IMAGE_URL}),labelSeparator:'',labelWidth:29,listeners:{scope:me,change:me.onInputChange,keyup:me.onInputKeyUp,el:{click:function(e){e.stopPropagation();}}},activate:Ext.emptyFn,deactivate:Ext.emptyFn};Ext.apply(cfg,Ext.applyIf(fields[item]||{},fieldCfg[item]),me.menuItemCfgs);Cls=cfg.fieldCls||me.fieldCls;item=fields[item]=Ext.create(Cls,cfg);}
me.add(item);}},fireUpdate:function(){this.fireEvent('update',this);},getValue:function(){var result={},key,field;for(key in this.fields){field=this.fields[key];if(field.isValid()&&field.getValue()!==null){result[key]=field.getValue();}}
return result;},setValue:function(data){var key;for(key in this.fields){this.fields[key].setValue(key in data?data[key]:'');}
this.fireEvent('update',this);},onInputKeyUp:function(field,e){if(e.getKey()===e.RETURN&&field.isValid()){e.stopEvent();this.hide();}},onInputChange:function(field){var me=this,fields=me.fields,eq=fields.eq,gt=fields.gt,lt=fields.lt;if(field==eq){if(gt){gt.setValue(null);}
if(lt){lt.setValue(null);}}
else{eq.setValue(null);}
this.updateTask.delay(this.updateBuffer);}},function(){this.prototype.iconTpl=Ext.create('Ext.XTemplate','<img src="{src}" alt="{text}" class="'+Ext.baseCSSPrefix+'menu-item-icon ux-rangemenu-icon {cls}" />');});

Ext.define('Ext.ux.grid.filter.BooleanFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.boolean',defaultValue:false,yesText:'Yes',noText:'No',init:function(config){var gId=Ext.id();this.options=[Ext.create('Ext.menu.CheckItem',{text:this.yesText,group:gId,checked:this.defaultValue===true}),Ext.create('Ext.menu.CheckItem',{text:this.noText,group:gId,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var i=0;i<this.options.length;i++){this.options[i].on('click',this.fireUpdate,this);this.options[i].on('checkchange',this.fireUpdate,this);}},getValue:function(){return this.options[0].checked;},setValue:function(value){this.options[value?0:1].setChecked(true);},getSerialArgs:function(){var args={type:'boolean',value:this.getValue()};return args;},validateRecord:function(record){return record.get(this.dataIndex)==this.getValue();}});

Ext.define('Ext.ux.grid.filter.DateFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.date',uses:['Ext.picker.Date','Ext.menu.Menu'],afterText:'After',beforeText:'Before',compareMap:{before:'lt',after:'gt',on:'eq'},dateFormat:'m/d/Y',menuItems:['before','after','-','on'],menuItemCfgs:{selectOnFocus:true,width:125},onText:'On',pickerOpts:{},init:function(config){var me=this,pickerCfg,i,len,item,cfg;pickerCfg=Ext.apply(me.pickerOpts,{xtype:'datepicker',minDate:me.minDate,maxDate:me.maxDate,format:me.dateFormat,listeners:{scope:me,select:me.onMenuSelect}});me.fields={};for(i=0,len=me.menuItems.length;i<len;i++){item=me.menuItems[i];if(item!=='-'){cfg={itemId:'range-'+item,text:me[item+'Text'],menu:Ext.create('Ext.menu.Menu',{items:[Ext.apply(pickerCfg,{itemId:item})]}),listeners:{scope:me,checkchange:me.onCheckChange}};item=me.fields[item]=Ext.create('Ext.menu.CheckItem',cfg);}
me.menu.add(item);}},onCheckChange:function(){this.setActive(this.isActivatable());this.fireEvent('update',this);},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide();}},onMenuSelect:function(picker,date){var fields=this.fields,field=this.fields[picker.itemId];field.setChecked(true);if(field==fields.on){fields.before.setChecked(false,true);fields.after.setChecked(false,true);}else{fields.on.setChecked(false,true);if(field==fields.after&&this.getFieldValue('before')<date){fields.before.setChecked(false,true);}else if(field==fields.before&&this.getFieldValue('after')>date){fields.after.setChecked(false,true);}}
this.fireEvent('update',this);picker.up('menu').hide();},getValue:function(){var key,result={};for(key in this.fields){if(this.fields[key].checked){result[key]=this.getFieldValue(key);}}
return result;},setValue:function(value,preserve){var key;for(key in this.fields){if(value[key]){this.getPicker(key).setValue(value[key]);this.fields[key].setChecked(true);}else if(!preserve){this.fields[key].setChecked(false);}}
this.fireEvent('update',this);},isActivatable:function(){var key;for(key in this.fields){if(this.fields[key].checked){return true;}}
return false;},getSerialArgs:function(){var args=[];for(var key in this.fields){if(this.fields[key].checked){args.push({type:'date',comparison:this.compareMap[key],value:Ext.Date.format(this.getFieldValue(key),this.dateFormat)});}}
return args;},getFieldValue:function(item){return this.getPicker(item).getValue();},getPicker:function(item){return this.fields[item].menu.items.first();},validateRecord:function(record){var key,pickerValue,val=record.get(this.dataIndex),clearTime=Ext.Date.clearTime;if(!Ext.isDate(val)){return false;}
val=clearTime(val,true).getTime();for(key in this.fields){if(this.fields[key].checked){pickerValue=clearTime(this.getFieldValue(key),true).getTime();if(key=='before'&&pickerValue<=val){return false;}
if(key=='after'&&pickerValue>=val){return false;}
if(key=='on'&&pickerValue!=val){return false;}}}
return true;}});

Ext.define('Ext.ux.grid.filter.StringFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.string',iconCls:'ux-gridfilter-text-icon',emptyText:'Enter Filter Text...',selectOnFocus:true,width:125,init:function(config){Ext.applyIf(config,{enableKeyEvents:true,iconCls:this.iconCls,hideLabel:true,listeners:{scope:this,keyup:this.onInputKeyUp,el:{click:function(e){e.stopPropagation();}}}});this.inputItem=Ext.create('Ext.form.field.Text',config);this.menu.add(this.inputItem);this.updateTask=Ext.create('Ext.util.DelayedTask',this.fireUpdate,this);},getValue:function(){return this.inputItem.getValue();},setValue:function(value){this.inputItem.setValue(value);this.fireEvent('update',this);},isActivatable:function(){return this.inputItem.getValue().length>0;},getSerialArgs:function(){return{type:'string',value:this.getValue()};},validateRecord:function(record){var val=record.get(this.dataIndex);if(typeof val!='string'){return(this.getValue().length===0);}
return val.toLowerCase().indexOf(this.getValue().toLowerCase())>-1;},onInputKeyUp:function(field,e){var k=e.getKey();if(k==e.RETURN&&field.isValid()){e.stopEvent();this.menu.hide();return;}
this.updateTask.delay(this.updateBuffer);}});

Ext.define('Ext.ux.grid.filter.ListFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.list',phpMode:false,init:function(config){this.dt=Ext.create('Ext.util.DelayedTask',this.fireUpdate,this);},createMenu:function(config){var menu=Ext.create('Ext.ux.grid.menu.ListMenu',config);menu.on('checkchange',this.onCheckChange,this);return menu;},getValue:function(){return this.menu.getSelected();},setValue:function(value){this.menu.setSelected(value);this.fireEvent('update',this);},isActivatable:function(){return this.getValue().length>0;},getSerialArgs:function(){return{type:'list',value:this.phpMode?this.getValue().join(','):this.getValue()};},onCheckChange:function(){this.dt.delay(this.updateBuffer);},validateRecord:function(record){var valuesArray=this.getValue();return Ext.Array.indexOf(valuesArray,record.get(this.dataIndex))>-1;}});

Ext.define('Ext.ux.grid.filter.NumericFilter',{extend:'Ext.ux.grid.filter.Filter',alias:'gridfilter.numeric',uses:['Ext.form.field.Number'],createMenu:function(config){var me=this,menu;menu=Ext.create('Ext.ux.grid.menu.RangeMenu',config);menu.on('update',me.fireUpdate,me);return menu;},getValue:function(){return this.menu.getValue();},setValue:function(value){this.menu.setValue(value);},isActivatable:function(){var values=this.getValue(),key;for(key in values){if(values[key]!==undefined){return true;}}
return false;},getSerialArgs:function(){var key,args=[],values=this.menu.getValue();for(key in values){args.push({type:'numeric',comparison:key,value:values[key]});}
return args;},validateRecord:function(record){var val=record.get(this.dataIndex),values=this.getValue(),isNumber=Ext.isNumber;if(isNumber(values.eq)&&val!=values.eq){return false;}
if(isNumber(values.lt)&&val>=values.lt){return false;}
if(isNumber(values.gt)&&val<=values.gt){return false;}
return true;}});

Ext.define('Ext.ux.grid.FiltersFeature',{extend:'Ext.grid.feature.Feature',alias:'feature.filters',uses:['Ext.ux.grid.menu.ListMenu','Ext.ux.grid.menu.RangeMenu','Ext.ux.grid.filter.BooleanFilter','Ext.ux.grid.filter.DateFilter','Ext.ux.grid.filter.ListFilter','Ext.ux.grid.filter.NumericFilter','Ext.ux.grid.filter.StringFilter'],autoReload:true,filterCls:'ux-filtered-column',local:false,menuFilterText:'Filters',paramPrefix:'filter',showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(config){var me=this;config=config||{};Ext.apply(me,config);me.deferredUpdate=Ext.create('Ext.util.DelayedTask',me.reload,me);me.filters=me.createFiltersCollection();me.filterConfigs=config.filters;},attachEvents:function(){var me=this,view=me.view,headerCt=view.headerCt,grid=me.getGridPanel();me.bindStore(view.getStore(),true);headerCt.on('menucreate',me.onMenuCreate,me);view.on('refresh',me.onRefresh,me);grid.on({scope:me,beforestaterestore:me.applyState,beforestatesave:me.saveState,beforedestroy:me.destroy});grid.filters=me;grid.addEvents('filterupdate');},createFiltersCollection:function(){return Ext.create('Ext.util.MixedCollection',false,function(o){return o?o.dataIndex:null;});},createFilters:function(){var me=this,hadFilters=me.filters.getCount(),grid=me.getGridPanel(),filters=me.createFiltersCollection(),model=grid.store.model,fields=model.prototype.fields,field,filter,state;if(hadFilters){state={};me.saveState(null,state);}
function add(dataIndex,config,filterable){if(dataIndex&&(filterable||config)){field=fields.get(dataIndex);filter={dataIndex:dataIndex,type:(field&&field.type&&field.type.type)||'auto'};if(Ext.isObject(config)){Ext.apply(filter,config);}
filters.replace(filter);}}
Ext.Array.each(me.filterConfigs,function(fc){add(fc.dataIndex,fc);});Ext.Array.each(grid.columns,function(column){if(column.filterable===false){filters.removeAtKey(column.dataIndex);}else{add(column.dataIndex,column.filter,column.filterable);}});me.removeAll();me.addFilters(filters.items);if(hadFilters){me.applyState(null,state);}},onMenuCreate:function(headerCt,menu){var me=this;me.createFilters();menu.on('beforeshow',me.onMenuBeforeShow,me);},onMenuBeforeShow:function(menu){var me=this,menuItem,filter;if(me.showMenu){menuItem=me.menuItem;if(!menuItem||menuItem.isDestroyed){me.createMenuItem(menu);menuItem=me.menuItem;}
filter=me.getMenuFilter();if(filter){menuItem.menu=filter.menu;menuItem.setChecked(filter.active);menuItem.setDisabled(filter.disabled===true);}
menuItem.setVisible(!!filter);this.sep.setVisible(!!filter);}},createMenuItem:function(menu){var me=this;me.sep=menu.add('-');me.menuItem=menu.add({checked:false,itemId:'filters',text:me.menuFilterText,listeners:{scope:me,checkchange:me.onCheckChange,beforecheckchange:me.onBeforeCheck}});},getGridPanel:function(){return this.view.up('gridpanel');},applyState:function(grid,state){var key,filter;this.applyingState=true;this.clearFilters();if(state.filters){for(key in state.filters){filter=this.filters.get(key);if(filter){filter.setValue(state.filters[key]);filter.setActive(true);}}}
this.deferredUpdate.cancel();if(this.local){this.reload();}
delete this.applyingState;delete state.filters;},saveState:function(grid,state){var filters={};this.filters.each(function(filter){if(filter.active){filters[filter.dataIndex]=filter.getValue();}});return(state.filters=filters);},destroy:function(){var me=this;Ext.destroyMembers(me,'menuItem','sep');me.removeAll();me.clearListeners();},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear();}},bindStore:function(store,initial){if(!initial&&this.store){if(this.local){store.un('load',this.onLoad,this);}else{store.un('beforeload',this.onBeforeLoad,this);}}
if(store){if(this.local){store.on('load',this.onLoad,this);}else{store.on('beforeload',this.onBeforeLoad,this);}}
this.store=store;},getMenuFilter:function(){var header=this.view.headerCt.getMenu().activeHeader;return header?this.filters.get(header.dataIndex):null;},onCheckChange:function(item,value){this.getMenuFilter().setActive(value);},onBeforeCheck:function(check,value){return!value||this.getMenuFilter().isActivatable();},onStateChange:function(event,filter){if(event!=='serialize'){var me=this,grid=me.getGridPanel();if(filter==me.getMenuFilter()){me.menuItem.setChecked(filter.active,false);}
if((me.autoReload||me.local)&&!me.applyingState){me.deferredUpdate.delay(me.updateBuffer);}
me.updateColumnHeadings();if(!me.applyingState){grid.saveState();}
grid.fireEvent('filterupdate',me,filter);}},onBeforeLoad:function(store,options){options.params=options.params||{};this.cleanParams(options.params);var params=this.buildQuery(this.getFilterData());Ext.apply(options.params,params);},onLoad:function(store,options){store.filterBy(this.getRecordFilter());},onRefresh:function(){this.updateColumnHeadings();},updateColumnHeadings:function(){var me=this,headerCt=me.view.headerCt;if(headerCt){headerCt.items.each(function(header){var filter=me.getFilter(header.dataIndex);header[filter&&filter.active?'addCls':'removeCls'](me.filterCls);});}},reload:function(){var me=this,store=me.view.getStore(),start;if(me.local){store.clearFilter(true);store.filterBy(me.getRecordFilter());}else{me.deferredUpdate.cancel();store.loadPage(1);}},getRecordFilter:function(){var f=[],len,i;this.filters.each(function(filter){if(filter.active){f.push(filter);}});len=f.length;return function(record){for(i=0;i<len;i++){if(!f[i].validateRecord(record)){return false;}}
return true;};},addFilter:function(config){var Cls=this.getFilterClass(config.type),filter=config.menu?config:(new Cls(config));this.filters.add(filter);Ext.util.Observable.capture(filter,this.onStateChange,this);return filter;},addFilters:function(filters){if(filters){var i,len,filter;for(i=0,len=filters.length;i<len;i++){filter=filters[i];if(filter){this.addFilter(filter);}}}},getFilter:function(dataIndex){return this.filters.get(dataIndex);},clearFilters:function(){this.filters.each(function(filter){filter.setActive(false);});},getFilterData:function(){var filters=[],i,len;this.filters.each(function(f){if(f.active){var d=[].concat(f.serialize());for(i=0,len=d.length;i<len;i++){filters.push({field:f.dataIndex,data:d[i]});}}});return filters;},buildQuery:function(filters){var p={},i,f,root,dataPrefix,key,tmp,len=filters.length;if(!this.encode){for(i=0;i<len;i++){f=filters[i];root=[this.paramPrefix,'[',i,']'].join('');p[root+'[field]']=f.field;dataPrefix=root+'[data]';for(key in f.data){p[[dataPrefix,'[',key,']'].join('')]=f.data[key];}}}else{tmp=[];for(i=0;i<len;i++){f=filters[i];tmp.push(Ext.apply({},{field:f.field},f.data));}
if(tmp.length>0){p[this.paramPrefix]=Ext.JSON.encode(tmp);}}
return p;},cleanParams:function(p){if(this.encode){delete p[this.paramPrefix];}else{var regex,key;regex=new RegExp('^'+this.paramPrefix+'\[[0-9]+\]');for(key in p){if(regex.test(key)){delete p[key];}}}},getFilterClass:function(type){switch(type){case'auto':type='string';break;case'int':case'float':type='numeric';break;case'bool':type='boolean';break;}
return Ext.ClassManager.getByAlias('gridfilter.'+type);}});

Ext.define('Ext.ux.form.SearchField',{extend:'Ext.form.field.Trigger',alias:'widget.searchfield',trigger1Cls:Ext.baseCSSPrefix+'form-clear-trigger',trigger2Cls:Ext.baseCSSPrefix+'form-search-trigger',hasSearch:false,paramName:'query',initComponent:function(){this.callParent(arguments);this.on('specialkey',function(f,e){if(e.getKey()==e.ENTER){this.onTrigger2Click();}},this);},afterRender:function(){this.callParent();this.triggerEl.item(0).setDisplayed('none');},onTrigger1Click:function(){var me=this,store=me.store,proxy=store.getProxy(),val;if(me.hasSearch){me.setValue('');proxy.extraParams[me.paramName]='';proxy.extraParams.start=0;store.load();me.hasSearch=false;me.triggerEl.item(0).setDisplayed('none');me.doComponentLayout();}},onTrigger2Click:function(){var me=this,store=me.store,proxy=store.getProxy(),value=me.getValue();if(value.length<1){me.onTrigger1Click();return;}
proxy.extraParams[me.paramName]=value;proxy.extraParams.start=0;store.load();me.hasSearch=true;me.triggerEl.item(0).setDisplayed('block');me.doComponentLayout();}});

Ext.define('ImagePortal.XTemplate',{extend:'Ext.XTemplate',staticIndex:0,convDate:function(value){if(value=='0000-00-00 00:00:00')
return'';else{var d=new Date(value.split(' ')[0]);return Ext.util.Format.date(d,'d-M-Y');}},getMirror:function(value){for(var i=0;i<this.mirrorObj.length;i++){var index=value.search(this.mirrorObj[i].main);if(index!=-1){if(this.mirrorObj[i].mirrors!=null){if(!Ext.isEmpty(this.mirrorObj[i].mirrors)){return i;}}}};},isViewChange:function(v){return v.view;},setDefaultView:function(view){this.view=view;},setMirror:function(value){if(value!=null){if(!Ext.isEmpty(value)){this.mirrorObj=value;}}},testMirror:function(value){if(typeof(this.mirrorObj)!='undefined'){var mirrorIndex=this.getMirror(value);if(typeof(mirrorIndex)!='undefined'){if(this.staticIndex+1>this.mirrorObj[mirrorIndex].mirrors.length){this.staticIndex=0;return value;}else{var val=value.replace(this.mirrorObj[mirrorIndex].main,this.mirrorObj[mirrorIndex].mirrors[this.staticIndex]);this.staticIndex++;return val;}}else{return value;}}else{return value;}}});

Ext.override(Ext.toolbar.Paging,{updateInfo:function(){var me=this,displayItem=me.child('#displayItem'),store=me.store,pageData=me.getPageData(),count,msg;pageData.fromRecord=Ext.util.Format.number(pageData.fromRecord,'0,0');pageData.toRecord=Ext.util.Format.number(pageData.toRecord,'0,0');pageData.total=Ext.util.Format.number(pageData.total,'0,0');if(displayItem){count=store.getCount();if(count===0){msg=me.emptyMsg;}else{msg=Ext.String.format(me.displayMsg,pageData.fromRecord,pageData.toRecord,pageData.total);}
displayItem.setText(msg);me.doComponentLayout();}}});

Ext.define('ImagePortal.TwinComboBox',{extend:'Ext.form.field.ComboBox',alias:'widget.xtwincombo',trigger1Cls:Ext.baseCSSPrefix+'form-clear-trigger',trigger2Cls:Ext.baseCSSPrefix+'form-arrow-trigger',afterRender:function(){this.callParent();this.triggerEl.item(0).setDisplayed('none');},onListSelectionChange:function(list,selectedRecords){var me=this,isMulti=me.multiSelect,hasRecords=selectedRecords.length>0;if(!me.ignoreSelection&&me.isExpanded){if(!isMulti){Ext.defer(me.collapse,1,me);}
if(isMulti||hasRecords){me.setValue(selectedRecords,false);me.triggerEl.item(0).setDisplayed('block');me.doComponentLayout();}
if(hasRecords){me.fireEvent('select',me,selectedRecords);}
me.inputEl.focus();}},onTrigger1Click:function(){this.reset();this.triggerEl.item(0).setDisplayed('none');this.doComponentLayout();this.fireEvent('clear',this);},onTrigger2Click:function(){this.onTriggerClick();}})

Ext.define('ImagesModel',{extend:'Ext.data.Model',fields:['image_id','filename','timestamp_modified','barcode','Family','Genus','SpecificEpithet','flickr_PlantID','flickr_modified','picassa_PlantID','picassa_modified','gTileProcessed','zoomEnabled','processed','path','server','farm']});Ext.define('CollectionsModel',{extend:'Ext.data.Model',fields:['collection_id','name','code']});

Ext.define('ImagePortal.ImageViewer',{extend:'Ext.window.Window',alias:'widget.imageviewer',border:false,title:'Image Viewer',width:800,height:500,modal:true,layout:'fit',maximizable:true,imagePath:'',imageId:'',imageBarcode:'',currentData:new Object(),initComponent:function(){this.imageinfopanel=Ext.create('ImagePortal.ImageDetailsPanel',{});this.imagezoompanel=Ext.create('SilverMeasure.ImageZoomPanel',{border:false,rototeControl:false,scaleControl:false,title:'Specimen Image',listeners:{scope:this,beforeImageLoad:function(zoompanel){this.imageinfopanel.resetInfo();},afterImageLoad:function(zoompanel){this.imageinfopanel.loadInfo(this.currentData);}}});this.imageTabs=Ext.create('Ext.tab.Panel',{defaults:{border:false},activeTab:0,items:[this.imagezoompanel,this.imageinfopanel]});this.tools=[{type:'left',scope:this,handler:function(){this.fireEvent('onPrevious',this);}},{type:'right',scope:this,handler:function(){this.fireEvent('onNext',this);}}]
this.tbar=[{text:'Download',menu:[{text:'Small',scope:this,handler:this.dnldSmallImg},{text:'Medium',scope:this,handler:this.dnldMediumImg},{text:'Large',scope:this,handler:this.dnldLargeImg},{text:'Original',scope:this,handler:this.dnldOriginalImg},{text:'Custom',scope:this,handler:this.dnldCustomImg}]}]
this.buttons=[{text:'Close',scope:this,handler:function(){this.close();}}]
this.items=[this.imageTabs]
this.callParent();},loadTabs:function(data){this.currentData=data;this.imagezoompanel.loadImage(data.filename);this.imagePath=data.path;this.imageBarcode=data.barcode;this.imageId=data.image_id;this.doComponentLayout();},dnldSmallImg:function(){window.open(this.imagePath+this.imageBarcode+'_s.jpg','_blank');},dnldMediumImg:function(){window.open(this.imagePath+this.imageBarcode+'_m.jpg','_blank');},dnldLargeImg:function(){window.open(this.imagePath+this.imageBarcode+'_l.jpg','_blank');},dnldOriginalImg:function(){window.open(this.imagePath+this.imageBarcode+'.jpg','_blank');},dnldCustomImg:function(){var customdownload=Ext.create('ImagePortal.CustomDownload',{imageId:this.imageId}).show();}});

Ext.define('ImagePortal.ImagesView',{extend:'Ext.view.View',alias:'widget.imagesview',id:'imagesview',border:false,autoScroll:true,itemSelector:'div.thumb-wrap',multiSelect:false,overItemCls:'x-item-over',trackOver:true,singleSelect:true,cls:'x-image-view',currentView:'small',deferEmptyText:false,initComponent:function(){this.emptyText='<div style="padding:10px;">No images available.</div>';this.imageTpl=new ImagePortal.XTemplate('<tpl for=".">','<tpl if="this.isViewChange(this)==\'small\'">','<div class="thumb-wrap ux-explorerview-item ux-explorerview-small-item">','<div class="ux-explorerview-icon"><img  ','<tpl if="Family != \'\' || Genus != \'\' || SpecificEpithet != \'\' ">',' qtip="','<tpl if="Family != \'\' " >{Family}<br></tpl>','<tpl if="Genus != \'\' " >{Genus} {SpecificEpithet}"</tpl>','</tpl>','src="{path:this.testMirror}{barcode}_s.jpg" onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" /></div>','</div>','</tpl>','<tpl if="this.isViewChange(this)==\'large\'">','<div class="thumb-wrap ux-explorerview-item ux-explorerview-tiles-item">','<div class="ux-explorerview-icon"><img onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" src="{path:this.testMirror}{barcode}_m.jpg"></div>','<div class="ux-explorerview-text"><div class="x-grid3-cell x-grid3-td-name" unselectable="on">{barcode}<br/> {Family}<span>{Genus} {SpecificEpithet}</span></div></div></div>','</tpl>','<tpl if="this.isViewChange(this)==\'both\'">','<div class="thumb-wrap x-row ux-explorerview-item ux-explorerview-mixed-item">','<div class="ux-explorerview-icon"><img onerror="this.src=\'http://images.cyberfloralouisiana.com/portal/resources/images/no-image.gif\'" src="{path:this.testMirror}{barcode}_s.jpg"></div>','<div class="ux-explorerview-text"><div class="x-grid3-cell x-grid3-td-name" unselectable="on">{barcode} {Family}<br/>{Genus} {SpecificEpithet}<br/>','<tpl if="barcode != 0">','<span>Barcode: {barcode}</span><br>','</tpl>','<span>Date Added: {timestamp_modified:this.convDate}</span></div>','</div>','</div>','</tpl>','</tpl>');this.imageTpl.setDefaultView(this.currentView);this.imageTpl.setMirror(Config.mirrors||[]);this.tpl=this.imageTpl;this.callParent();}});

Ext.define('ImagePortal.ImagesGird',{extend:'Ext.grid.Panel',alias:'widget.imagesgird',border:false,autoScroll:true,loadMask:true,columnLines:true,enableQuickMode:false,enableColumnHide:false,forceFit:true,viewConfig:{stripeRows:false,emptyText:'<div style="padding:10px;">No images available.</div>'},initComponent:function(){var encode=false;var filters={ftype:'filters',encode:encode,filters:[{type:'date',dataIndex:'timestamp_modified'}]}
this.features=[filters];this.columns=[{header:"Image Id",width:50,sortable:true,dataIndex:'image_id',draggable:false,hidden:true},{header:"Collection",width:157,dataIndex:"Collection",sortable:true,draggable:false},{header:"Filename",width:85,filter:{type:'string'},dataIndex:"filename",sortable:true,draggable:false,hidden:true},{header:"Barcode",width:160,filter:{type:'string'},dataIndex:"barcode",sortable:true,draggable:false},{header:"Last Modified",width:120,filter:{type:'date',format:'mm-dd-yyyy'},dataIndex:"timestamp_modified",sortable:true,draggable:false,hidden:true},{header:"Family",width:160,filter:{type:'string'},dataIndex:"Family",sortable:true,draggable:false},{header:"Genus",width:160,filter:{type:'string'},dataIndex:"Genus",sortable:true,draggable:false},{header:"Specific Epithet",width:160,filter:{type:'string'},dataIndex:"SpecificEpithet",sortable:true,draggable:false},{header:"Flickr Avail",width:80,filter:{type:'string'},dataIndex:"flickr_PlantID",sortable:true,draggable:false,hidden:true},{header:"Picassa Avail",width:80,filter:{type:'numeric',options:['0','1']},dataIndex:"picassa_PlantID",sortable:true,draggable:false,hidden:true},{header:"Picassa Modified",width:120,filter:{type:'date',format:'mm-dd-yyyy'},dataIndex:"picassa_modified",sortable:true,draggable:false,hidden:true},{header:"Tiled Processed",width:80,filter:{type:'numeric',options:['0','1']},dataIndex:"gTileProcessed",sortable:true,draggable:false,hidden:true},{header:"Zoom Enabled",width:80,filter:{type:'numeric',options:['0','1']},dataIndex:"zoomEnabled",sortable:true,draggable:false,hidden:true},{header:"Processed",width:80,filter:{type:'numeric',options:['0','1']},dataIndex:"processed",sortable:true,draggable:false,hidden:true}]
this.callParent();}});

Ext.define('ImagePortal.ImageDetailsPanel',{extend:'Ext.panel.Panel',alias:'widget.imagedetailspanel',border:false,title:'Image Info',layout:'fit',autoScroll:true,initComponent:function(){this.filedTpl=new Ext.XTemplate('<div style="visibility: visible; height: 100%; position: relative; width: 100%;" class="dataview" id="dataview3">','<div style="margin-left: 24px; margin-top: 5px;"></div>','<tpl if="image_id != 0">','<div class="detailrow1"><div class="detaillabel">Image Id at</div><div class="detailtext">{image_id}</div></div>','</tpl>','<tpl if="filename!= 0">','<div class="detailrow1"><div class="detaillabel">Filename</div><div class="detailtext">{filename}</div></div>','</tpl>','<tpl if="barcode != 0">','<div class="detailrow1"><div class="detaillabel">Barcode</div><div class="detailtext">{barcode}</div></div>','</tpl>','<tpl if="timestamp_modified!= 0">','<div class="detailrow1"><div class="detaillabel">Last Modified</div><div class="detailtext">{timestamp_modified}</div></div>','</tpl>','<tpl if="Family != 0">','<div class="detailrow1"><div class="detaillabel">Family</div><div class="detailtext">{Family}</div></div>','</tpl>','<tpl if="Genus != 0">','<div class="detailrow1"><div class="detaillabel">Genus</div><div class="detailtext">{Genus}</div></div>','</tpl>','<tpl if="SpecificEpithet!= 0">','<div class="detailrow1"><div class="detaillabel">Specific Epithet</div><div class="detailtext">{SpecificEpithet}</div></div>','</tpl>','<tpl if="flickr_PlantID!= 0">','<div class="detailrow1"><div class="detaillabel">Flickr PlantID</div><div class="detailtext">{flickr_PlantID}</div></div>','</tpl>','<tpl if="picassa_PlantID!= 0">','<div class="detailrow1"><div class="detaillabel">Picassa PlantID</div><div class="detailtext">{picassa_PlantID}</div></div>','</tpl>','<tpl if="picassa_modified!= 0">','<div class="detailrow1"><div class="detaillabel">Picassa Modified</div><div class="detailtext">{picassa_modified}</div></div>','</tpl>','<tpl if="gTileProcessed!= 0">','<div class="detailrow1"><div class="detaillabel">Tiled Processed</div><div class="detailtext">{gTileProcessed}</div></div>','</tpl>','<tpl if="zoomEnabled!= 0">','<div class="detailrow1"><div class="detaillabel">Zoom Enabled</div><div class="detailtext">{zoomEnabled}</div></div>','</tpl>','<tpl if="processed!= 0">','<div class="detailrow1"><div class="detaillabel">Processed</div><div class="detailtext">{processed}</div></div>','</tpl>','</div>','</div>');this.callParent();},loadInfo:function(data){this.filedTpl.overwrite(this.body,data);},resetInfo:function(){this.loadInfo({});}});

Ext.define('ImagePortal.CustomDownload',{extend:'Ext.window.Window',alias:'widget.customdownload',border:false,title:'Custom Size',width:200,height:150,modal:true,resizable:false,autoScroll:true,layout:'fit',imageId:'',initComponent:function(){this.buttons=[{text:'Download',scope:this,width:50,handler:this.downloadImage},{text:'Cancel',width:50,scope:this,handler:this.close}]
var ftStore=Ext.create('Ext.data.SimpleStore',{fields:['id','fltype'],data:[['jpeg','jpeg'],['png','png'],['jpg','jpg']]});this.downloadForm=Ext.create('Ext.form.Panel',{border:false,defaultType:'numberfield',bodyPadding:10,defaults:{labelWidth:60,anchor:'100%'},plain:true,items:[{fieldLabel:'Width',name:'flwidth'},{fieldLabel:'Height',name:'flheight'},{xtype:'combo',fieldLabel:'File Type',store:ftStore,displayField:'fltype',valueField:'fltype',mode:'local',value:'jpeg',name:'fltype',editable:false,emptyText:'Select',forceSelection:true,triggerAction:'all',selectOnFocus:true}]});this.items=[this.downloadForm]
this.callParent();},downloadImage:function(){var values=this.downloadForm.getForm().getValues();if(Ext.isEmpty(values.flwidth)&&Ext.isEmpty(values.flheight)){Ext.Msg.alert("Notice","At least one dimension is required.")}else{var url=Config.portalUrl+"resources/api/api.php?cmd=get_image&width="+values.flwidth+"&height="+values.flheight+"&image_id="+this.imageId+"&type="+values.fltype
window.open(url,'_blank');this.close();}}});

Ext.define('ImagePortal.Images',{extend:'Ext.panel.Panel',alias:'widget.images',border:false,id:'images',layout:'card',activeItem:1,currentView:'small',requestType:'ajax',initComponent:function(){if(Config.mode!='local'){this.requestType='jsonp';}
this.store=Ext.create('Ext.data.Store',{pageSize:100,autoLoad:true,remoteSort:true,model:'ImagesModel',proxy:{type:this.requestType,url:(typeof Config!='undefined'&&Ext.isDefined(Config.portalUrl))?Config.portalUrl+'resources/api/api.php':'resources/api/api.php',reader:{type:'json',root:'data',totalProperty:'totalCount'},extraParams:{cmd:'images',filters:'',code:''},simpleSortMode:true}});this.views=Ext.create('Ext.button.Cycle',{showText:true,prependText:'View as ',scope:this,menu:{items:[{text:'Small',value:'small',checked:true,iconCls:'icon_cycleImages'},{text:'Large',value:'large',iconCls:'icon_cycleImages'},{text:'Both',value:'both',iconCls:'icon_cycleImages'},{text:'Details',value:'details',iconCls:'icon_cycleImages'}]},changeHandler:this.changeView});var collectionStore=Ext.create('Ext.data.Store',{proxy:{type:this.requestType,model:'CollectionsModel',url:(typeof Config!='undefined'&&Ext.isDefined(Config.portalUrl))?Config.portalUrl+'resources/api/api.php':'resources/api/api.php',reader:{type:'json',root:'records',totalProperty:'totalCount'},scriptTag:this.scriptTag,extraParams:{cmd:'collections',filters:'',code:''}}});this.search_evernote=Ext.create('Ext.ux.form.SearchField',{width:250,fieldLabel:'Search',labelWidth:60,hideLabel:true,xtype:'searchfield',store:this.store,paramName:'value',onTrigger1Click:function(){var me=this,store=me.store,proxy=store.getProxy(),val;if(me.hasSearch){me.setValue('');proxy.extraParams=proxy.extraParams||{};proxy.extraParams.cmd='images';proxy.extraParams[me.paramName]='';proxy.extraParams.start=0;store.load();me.hasSearch=false;me.triggerEl.item(0).setDisplayed('none');me.doComponentLayout();}},onTrigger2Click:function(){var me=this,store=me.store,proxy=store.getProxy(),value=me.getValue();if(value.length<1){me.onTrigger1Click();return;}
proxy.extraParams=proxy.extraParams||{};proxy.extraParams.cmd='searchEnLabels';proxy.extraParams[me.paramName]=value;proxy.extraParams.start=0;store.load();me.hasSearch=true;me.triggerEl.item(0).setDisplayed('block');me.doComponentLayout();}});this.collectionCombo=Ext.create('ImagePortal.TwinComboBox',{store:collectionStore,width:200,mode:'local',displayField:'name',typeAhead:false,triggerAction:'all',editable:false,listeners:{select:function(combo,record){this.store.getProxy().extraParams.code=record[0].data.code;this.store.load();},clear:function(){this.store.getProxy().extraParams.code='';this.store.load();},scope:this}});this.viewImage=Ext.create('Ext.button.Button',{text:'View Image',iconCls:'icon_image',scope:this,handler:function(me){var currentActive=this.getLayout().getActiveItem().currentActive;var selected=[];if(currentActive=='imageGrid')
selected=this.imagesgird.getSelectionModel().getSelection();if(currentActive=='imageView')
selected=this.imagesview.getSelectionModel().getSelection();if(Ext.isEmpty(selected)){Ext.Msg.alert('Notice','Please select record');}else{this.showWindow(selected[0].data);}}});this.tbar=['Collection: ',this.collectionCombo,'Search: ',this.search_evernote,this.views,'->',{iconCls:'icon-rss',hidden:Config.hideRss,scope:this,handler:function(){var rssUrl=(typeof Config!='undefined'&&Ext.isDefined(Config.portalUrl))?Config.portalUrl+'resources/api/api.php':'resources/api/api.php'
window.open(rssUrl+'?cmd=images&code=&dir=ASC&filters=&output=rss','_blank');}}];this.bbar=Ext.create('Ext.toolbar.Paging',{store:this.store,scope:this,displayInfo:true,displayMsg:'Displaying Specimen Images {0} - {1} of {2}',emptyMsg:'No images available.',items:[this.viewImage]});this.imagesgird=Ext.create('ImagePortal.ImagesGird',{currentActive:'imageGrid',store:this.store,scope:this});this.imagesview=Ext.create('ImagePortal.ImagesView',{store:this.store,scope:this,currentView:this.currentView});this.imagesgird.on({scope:this,'itemdblclick':this.imageDblClick,'itemcontextmenu':this.showContextMenu});this.imagesview.on({scope:this,'itemdblclick':this.imageDblClick,'itemcontextmenu':this.showContextMenu});this.imagesviewPanel=Ext.create('Ext.panel.Panel',{currentActive:'imageView',border:false,layout:'fit',scope:this,items:[this.imagesview]});this.items=[this.imagesgird,this.imagesviewPanel];this.callParent();},showContextMenu:function(view,record,item,index,e,opt){var items=[];items.push({text:'View Image',iconCls:'icon_image',scope:this,handler:function(me){this.showWindow(record.data);}});var menu=Ext.create('Ext.menu.Menu',{items:items});var xy=e.getXY();menu.showAt(xy);},imageDblClick:function(view,record,item,index,e,opt){this.showWindow(record.data);},showWindow:function(data){var imageviewer=Ext.create('ImagePortal.ImageViewer',{});imageviewer.show();imageviewer.on('onPrevious',this.previousClick,this)
imageviewer.on('onNext',this.nextClick,this)
imageviewer.loadTabs(data);},nextClick:function(imageviewer){var currentActive=this.getLayout().getActiveItem().currentActive;var pageLimit=this.store.pageSize-1;if(currentActive=='imageView'){var selected=this.imagesview.getSelectionModel().getSelection();if(!Ext.isEmpty(selected)){var currentIndex=this.store.indexOf(selected[0]);if(currentIndex==pageLimit){Ext.Msg.alert('Notice','This last record');}else{++currentIndex;var rec=this.store.getAt(currentIndex);this.imagesview.getSelectionModel().doSelect(currentIndex);imageviewer.loadTabs(rec.data);}}}
if(currentActive=='imageGrid'){var selected=this.imagesgird.getSelectionModel().getSelection();if(!Ext.isEmpty(selected)){var currentIndex=this.store.indexOf(selected[0]);if(currentIndex==pageLimit){Ext.Msg.alert('Notice','This first record');}else{++currentIndex;var rec=this.store.getAt(currentIndex);this.imagesgird.getSelectionModel().doSelect(currentIndex);imageviewer.loadTabs(rec.data);}}}},previousClick:function(imageviewer){var currentActive=this.getLayout().getActiveItem().currentActive;var pageStart=0;if(currentActive=='imageView'){var selected=this.imagesview.getSelectionModel().getSelection();if(!Ext.isEmpty(selected)){var currentIndex=this.store.indexOf(selected[0]);if(currentIndex==pageStart){Ext.Msg.alert('Notice','This first record');}else{--currentIndex;var rec=this.store.getAt(currentIndex);this.imagesview.getSelectionModel().doSelect(currentIndex);imageviewer.loadTabs(rec.data);}}}
if(currentActive=='imageGrid'){var selected=this.imagesgird.getSelectionModel().getSelection();if(!Ext.isEmpty(selected)){var currentIndex=this.store.indexOf(selected[0]);if(currentIndex==pageStart){Ext.Msg.alert('Notice','This first record');}else{--currentIndex;var rec=this.store.getAt(currentIndex);this.imagesgird.getSelectionModel().doSelect(currentIndex);imageviewer.loadTabs(rec.data);}}}},changeView:function(cycleButton,activeItem){var currentActive=this.getLayout().getActiveItem().currentActive;switch(activeItem.value){case'small':if(currentActive!='imageView'){this.changeLayout(1);}
this.imagesview.tpl.view='small';this.imagesview.refresh();break;case'large':if(currentActive!='imageView'){this.changeLayout(1);}
this.imagesview.tpl.view='large';this.imagesview.refresh();break;case'both':if(currentActive!='imageView'){this.changeLayout(1);}
this.imagesview.tpl.view='both';this.imagesview.refresh();break;case'details':this.changeLayout(0);default:break;}},changeLayout:function(id){var l=this.getLayout();l.setActiveItem(id);this.doLayout();}});
